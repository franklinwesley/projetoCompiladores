/*
 * generated by Xtext
 */
grammar InternalSimpleJava;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.services.SimpleJavaGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private SimpleJavaGrammarAccess grammarAccess;
 	
    public InternalSimpleJavaParser(TokenStream input, SimpleJavaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected SimpleJavaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModelAccess().getCompilation_unitParserRuleCall()); 
    }
    this_compilation_unit_0=rulecompilation_unit
    { 
        $current = $this_compilation_unit_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulecompilation_unit
entryRulecompilation_unit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompilation_unitRule()); }
	 iv_rulecompilation_unit=rulecompilation_unit 
	 { $current=$iv_rulecompilation_unit.current; } 
	 EOF 
;

// Rule compilation_unit
rulecompilation_unit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompilation_unitAccess().getPacotePackage_statementParserRuleCall_0_0()); 
	    }
		lv_pacote_0_0=rulepackage_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompilation_unitRule());
	        }
       		set(
       			$current, 
       			"pacote",
        		lv_pacote_0_0, 
        		"package_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCompilation_unitAccess().getImportesImport_statementParserRuleCall_1_0()); 
	    }
		lv_importes_1_0=ruleimport_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompilation_unitRule());
	        }
       		add(
       			$current, 
       			"importes",
        		lv_importes_1_0, 
        		"import_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCompilation_unitAccess().getDeclaracaoType_declarationParserRuleCall_2_0()); 
	    }
		lv_declaracao_2_0=ruletype_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompilation_unitRule());
	        }
       		add(
       			$current, 
       			"declaracao",
        		lv_declaracao_2_0, 
        		"type_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulepackage_statement
entryRulepackage_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackage_statementRule()); }
	 iv_rulepackage_statement=rulepackage_statement 
	 { $current=$iv_rulepackage_statement.current; } 
	 EOF 
;

// Rule package_statement
rulepackage_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackage_statementAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackage_statementAccess().getNoomePacoteNameParserRuleCall_1_0()); 
	    }
		lv_noomePacote_1_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackage_statementRule());
	        }
       		set(
       			$current, 
       			"noomePacote",
        		lv_noomePacote_1_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackage_statementAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleimport_statement
entryRuleimport_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImport_statementRule()); }
	 iv_ruleimport_statement=ruleimport_statement 
	 { $current=$iv_ruleimport_statement.current; } 
	 EOF 
;

// Rule import_statement
ruleimport_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImport_statementAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImport_statementAccess().getNomeImporteNameParserRuleCall_1_0()); 
	    }
		lv_nomeImporte_1_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImport_statementRule());
	        }
       		set(
       			$current, 
       			"nomeImporte",
        		lv_nomeImporte_1_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='.*;' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImport_statementAccess().getFullStopAsteriskSemicolonKeyword_2_0());
    }

    |	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getImport_statementAccess().getSemicolonKeyword_2_1());
    }
))
;





// Entry rule entryRuletype_declaration
entryRuletype_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getType_declarationRule()); }
	 iv_ruletype_declaration=ruletype_declaration 
	 { $current=$iv_ruletype_declaration.current; } 
	 EOF 
;

// Rule type_declaration
ruletype_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getType_declarationAccess().getDoc_commentParserRuleCall_0()); 
    }
    this_doc_comment_0=ruledoc_comment
    { 
        $current = $this_doc_comment_0.current; 
        afterParserOrEnumRuleCall();
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getType_declarationAccess().getDeclaracaoClasseClass_declarationParserRuleCall_1_0_0()); 
	    }
		lv_declaracaoClasse_1_0=ruleclass_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getType_declarationRule());
	        }
       		set(
       			$current, 
       			"declaracaoClasse",
        		lv_declaracaoClasse_1_0, 
        		"class_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getType_declarationAccess().getDeclaracaoInterfaceInterface_declarationParserRuleCall_1_1_0()); 
	    }
		lv_declaracaoInterface_2_0=ruleinterface_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getType_declarationRule());
	        }
       		set(
       			$current, 
       			"declaracaoInterface",
        		lv_declaracaoInterface_2_0, 
        		"interface_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuledoc_comment
entryRuledoc_comment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoc_commentRule()); }
	 iv_ruledoc_comment=ruledoc_comment 
	 { $current=$iv_ruledoc_comment.current; } 
	 EOF 
;

// Rule doc_comment
ruledoc_comment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='/**' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDoc_commentAccess().getSolidusAsteriskAsteriskKeyword_0());
    }
(
(
		lv_comentario_1_0=RULE_STRING
		{
			newLeafNode(lv_comentario_1_0, grammarAccess.getDoc_commentAccess().getComentarioSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoc_commentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comentario",
        		lv_comentario_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='*/' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDoc_commentAccess().getAsteriskSolidusKeyword_2());
    }
)
;





// Entry rule entryRuleclass_declaration
entryRuleclass_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClass_declarationRule()); }
	 iv_ruleclass_declaration=ruleclass_declaration 
	 { $current=$iv_ruleclass_declaration.current; } 
	 EOF 
;

// Rule class_declaration
ruleclass_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getClass_declarationAccess().getModificadoresMODIFIERParserRuleCall_0_0()); 
	    }
		lv_modificadores_0_0=ruleMODIFIER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClass_declarationRule());
	        }
       		add(
       			$current, 
       			"modificadores",
        		lv_modificadores_0_0, 
        		"MODIFIER");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='class' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClass_declarationAccess().getClassKeyword_1());
    }
(
(
		lv_nomeClasse_2_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomeClasse_2_0, grammarAccess.getClass_declarationAccess().getNomeClasseIDENTIFIERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClass_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomeClasse",
        		lv_nomeClasse_2_0, 
        		"IDENTIFIER");
	    }

)
)(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClass_declarationAccess().getExtendsKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClass_declarationAccess().getSuperclasseNameParserRuleCall_3_1_0()); 
	    }
		lv_superclasse_4_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClass_declarationRule());
	        }
       		set(
       			$current, 
       			"superclasse",
        		lv_superclasse_4_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='implements' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClass_declarationAccess().getImplementsKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClass_declarationAccess().getImplementosClasseNameParserRuleCall_4_1_0()); 
	    }
		lv_implementosClasse_6_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClass_declarationRule());
	        }
       		add(
       			$current, 
       			"implementosClasse",
        		lv_implementosClasse_6_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getClass_declarationAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClass_declarationAccess().getImplementosClasseNameParserRuleCall_4_2_1_0()); 
	    }
		lv_implementosClasse_8_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClass_declarationRule());
	        }
       		add(
       			$current, 
       			"implementosClasse",
        		lv_implementosClasse_8_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getClass_declarationAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getClass_declarationAccess().getCorpoClasseField_declarationParserRuleCall_6_0_0()); 
	    }
		lv_corpoClasse_10_0=rulefield_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClass_declarationRule());
	        }
       		add(
       			$current, 
       			"corpoClasse",
        		lv_corpoClasse_10_0, 
        		"field_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClass_declarationAccess().getDeclaracaoClasseClass_declarationParserRuleCall_6_1_0()); 
	    }
		lv_declaracaoClasse_11_0=ruleclass_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClass_declarationRule());
	        }
       		add(
       			$current, 
       			"declaracaoClasse",
        		lv_declaracaoClasse_11_0, 
        		"class_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getClass_declarationAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleinterface_declaration
entryRuleinterface_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterface_declarationRule()); }
	 iv_ruleinterface_declaration=ruleinterface_declaration 
	 { $current=$iv_ruleinterface_declaration.current; } 
	 EOF 
;

// Rule interface_declaration
ruleinterface_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_declarationAccess().getModificadoresMODIFIERParserRuleCall_0_0()); 
	    }
		lv_modificadores_0_0=ruleMODIFIER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_declarationRule());
	        }
       		add(
       			$current, 
       			"modificadores",
        		lv_modificadores_0_0, 
        		"MODIFIER");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='interface' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterface_declarationAccess().getInterfaceKeyword_1());
    }
(
(
		lv_nomeInterface_2_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomeInterface_2_0, grammarAccess.getInterface_declarationAccess().getNomeInterfaceIDENTIFIERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterface_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomeInterface",
        		lv_nomeInterface_2_0, 
        		"IDENTIFIER");
	    }

)
)(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInterface_declarationAccess().getExtendsKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_declarationAccess().getSuperinterfacesNameParserRuleCall_3_1_0()); 
	    }
		lv_superinterfaces_4_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_declarationRule());
	        }
       		add(
       			$current, 
       			"superinterfaces",
        		lv_superinterfaces_4_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInterface_declarationAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_declarationAccess().getSuperinterfacesNameParserRuleCall_3_2_1_0()); 
	    }
		lv_superinterfaces_6_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_declarationRule());
	        }
       		add(
       			$current, 
       			"superinterfaces",
        		lv_superinterfaces_6_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInterface_declarationAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_declarationAccess().getCorpoInterfaceField_declarationParserRuleCall_5_0()); 
	    }
		lv_corpoInterface_8_0=rulefield_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_declarationRule());
	        }
       		add(
       			$current, 
       			"corpoInterface",
        		lv_corpoInterface_8_0, 
        		"field_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInterface_declarationAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRulefield_declaration
entryRulefield_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getField_declarationRule()); }
	 iv_rulefield_declaration=rulefield_declaration 
	 { $current=$iv_rulefield_declaration.current; } 
	 EOF 
;

// Rule field_declaration
rulefield_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getField_declarationAccess().getComentarioDoc_commentParserRuleCall_0_0_0()); 
	    }
		lv_comentario_0_0=ruledoc_comment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getField_declarationRule());
	        }
       		set(
       			$current, 
       			"comentario",
        		lv_comentario_0_0, 
        		"doc_comment");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getField_declarationAccess().getDeclaracaoMetodoMethod_declarationParserRuleCall_0_1_0_0()); 
	    }
		lv_declaracaoMetodo_1_0=rulemethod_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getField_declarationRule());
	        }
       		set(
       			$current, 
       			"declaracaoMetodo",
        		lv_declaracaoMetodo_1_0, 
        		"method_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getField_declarationAccess().getDeclaracaoConstrutorConstructor_declarationParserRuleCall_0_1_1_0()); 
	    }
		lv_declaracaoConstrutor_2_0=ruleconstructor_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getField_declarationRule());
	        }
       		set(
       			$current, 
       			"declaracaoConstrutor",
        		lv_declaracaoConstrutor_2_0, 
        		"constructor_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getField_declarationAccess().getDeclaracaoVariavelVariable_declarationParserRuleCall_0_1_2_0()); 
	    }
		lv_declaracaoVariavel_3_0=rulevariable_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getField_declarationRule());
	        }
       		set(
       			$current, 
       			"declaracaoVariavel",
        		lv_declaracaoVariavel_3_0, 
        		"variable_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getField_declarationAccess().getEstaticoStatic_initializerParserRuleCall_1_0()); 
	    }
		lv_estatico_4_0=rulestatic_initializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getField_declarationRule());
	        }
       		set(
       			$current, 
       			"estatico",
        		lv_estatico_4_0, 
        		"static_initializer");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getField_declarationAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRulemethod_declaration
entryRulemethod_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethod_declarationRule()); }
	 iv_rulemethod_declaration=rulemethod_declaration 
	 { $current=$iv_rulemethod_declaration.current; } 
	 EOF 
;

// Rule method_declaration
rulemethod_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethod_declarationAccess().getModificadorMetodoMODIFIERParserRuleCall_0_0()); 
	    }
		lv_modificadorMetodo_0_0=ruleMODIFIER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethod_declarationRule());
	        }
       		set(
       			$current, 
       			"modificadorMetodo",
        		lv_modificadorMetodo_0_0, 
        		"MODIFIER");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethod_declarationAccess().getTipoRetornoTypeParserRuleCall_1_0()); 
	    }
		lv_tipoRetorno_1_0=ruletype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethod_declarationRule());
	        }
       		set(
       			$current, 
       			"tipoRetorno",
        		lv_tipoRetorno_1_0, 
        		"type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_nomeMetodo_2_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomeMetodo_2_0, grammarAccess.getMethod_declarationAccess().getNomeMetodoIDENTIFIERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethod_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomeMetodo",
        		lv_nomeMetodo_2_0, 
        		"IDENTIFIER");
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMethod_declarationAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethod_declarationAccess().getParametrosMetodoParameter_listParserRuleCall_4_0()); 
	    }
		lv_parametrosMetodo_4_0=ruleparameter_list		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethod_declarationRule());
	        }
       		set(
       			$current, 
       			"parametrosMetodo",
        		lv_parametrosMetodo_4_0, 
        		"parameter_list");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMethod_declarationAccess().getRightParenthesisKeyword_5());
    }
(	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMethod_declarationAccess().getLeftSquareBracketKeyword_6_0());
    }
	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMethod_declarationAccess().getRightSquareBracketKeyword_6_1());
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getMethod_declarationAccess().getBlocoMetodoStatement_blockParserRuleCall_7_0_0()); 
	    }
		lv_blocoMetodo_8_0=rulestatement_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethod_declarationRule());
	        }
       		set(
       			$current, 
       			"blocoMetodo",
        		lv_blocoMetodo_8_0, 
        		"statement_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMethod_declarationAccess().getSemicolonKeyword_7_1());
    }
))
;





// Entry rule entryRuleparameter
entryRuleparameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleparameter=ruleparameter 
	 { $current=$iv_ruleparameter.current; } 
	 EOF 
;

// Rule parameter
ruleparameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTipoParametroTypeParserRuleCall_0_0()); 
	    }
		lv_tipoParametro_0_0=ruletype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"tipoParametro",
        		lv_tipoParametro_0_0, 
        		"type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_nomeParametro_1_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomeParametro_1_0, grammarAccess.getParameterAccess().getNomeParametroIDENTIFIERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomeParametro",
        		lv_nomeParametro_1_0, 
        		"IDENTIFIER");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_0());
    }
	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1());
    }
)*)
;





// Entry rule entryRuleparameter_list
entryRuleparameter_list returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameter_listRule()); }
	 iv_ruleparameter_list=ruleparameter_list 
	 { $current=$iv_ruleparameter_list.current; } 
	 EOF 
;

// Rule parameter_list
ruleparameter_list returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameter_listAccess().getParametrosParameterParserRuleCall_0_0()); 
	    }
		lv_parametros_0_0=ruleparameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameter_listRule());
	        }
       		add(
       			$current, 
       			"parametros",
        		lv_parametros_0_0, 
        		"parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameter_listAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameter_listAccess().getParametrosParameterParserRuleCall_1_1_0()); 
	    }
		lv_parametros_2_0=ruleparameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameter_listRule());
	        }
       		add(
       			$current, 
       			"parametros",
        		lv_parametros_2_0, 
        		"parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulestatement_block
entryRulestatement_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatement_blockRule()); }
	 iv_rulestatement_block=rulestatement_block 
	 { $current=$iv_rulestatement_block.current; } 
	 EOF 
;

// Rule statement_block
rulestatement_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStatement_blockAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatement_blockAccess().getCorpoStatementParserRuleCall_1_0()); 
	    }
		lv_corpo_1_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatement_blockRule());
	        }
       		add(
       			$current, 
       			"corpo",
        		lv_corpo_1_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStatement_blockAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRulestatement
entryRulestatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_rulestatement=rulestatement 
	 { $current=$iv_rulestatement.current; } 
	 EOF 
;

// Rule statement
rulestatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'public' 
 | 	'private' 
 | 	'protected' 
 | 	'static' 
 | 	'final' 
 | 	'native' 
 | 	'synchronized' 
 | 	'abstract' 
 | 	'threadsafe' 
 | 	'transient' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getDeclaracaoVariavelVariable_declarationParserRuleCall_0_0()); 
	    }
		lv_declaracaoVariavel_0_0=rulevariable_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"declaracaoVariavel",
        		lv_declaracaoVariavel_0_0, 
        		"variable_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(((	'!' 
 | 	'true' 
 | 	'false' 
 | 	'-' 
 | 	'++' 
 | 	'--' 
 | 	'~' 
 | 	'new' 
 | 	'null' 
 | 	'super' 
 | 	'this' 
 | 	'(' 
 | 	RULE_DECIMAL_DIGITS | 	RULE_INTEGER_LITERAL | 	RULE_FLOAT_LITERAL | 	RULE_STRING | 	RULE_IDENTIFIER)=>
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getExpressaoExpressionParserRuleCall_1_0_0()); 
	    }
		lv_expressao_1_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"expressao",
        		lv_expressao_1_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getNewblocoStatement_blockParserRuleCall_2_0()); 
	    }
		lv_newbloco_3_0=rulestatement_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"newbloco",
        		lv_newbloco_3_0, 
        		"statement_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCorpoIfIf_statementParserRuleCall_3_0()); 
	    }
		lv_corpoIf_4_0=ruleif_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"corpoIf",
        		lv_corpoIf_4_0, 
        		"if_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCorpoDoWhileDo_statementParserRuleCall_4_0()); 
	    }
		lv_corpoDoWhile_5_0=ruledo_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"corpoDoWhile",
        		lv_corpoDoWhile_5_0, 
        		"do_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCorpoWhileWhile_statementParserRuleCall_5_0()); 
	    }
		lv_corpoWhile_6_0=rulewhile_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"corpoWhile",
        		lv_corpoWhile_6_0, 
        		"while_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCorpoForFor_statementParserRuleCall_6_0()); 
	    }
		lv_corpoFor_7_0=rulefor_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"corpoFor",
        		lv_corpoFor_7_0, 
        		"for_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCorpoTryCatchTry_statementParserRuleCall_7_0()); 
	    }
		lv_corpoTryCatch_8_0=ruletry_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"corpoTryCatch",
        		lv_corpoTryCatch_8_0, 
        		"try_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCorpoSwitchCaseSwitch_statementParserRuleCall_8_0()); 
	    }
		lv_corpoSwitchCase_9_0=ruleswitch_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"corpoSwitchCase",
        		lv_corpoSwitchCase_9_0, 
        		"switch_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_10='synchronized' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStatementAccess().getSynchronizedKeyword_9_0());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getExpressaoSynchronizedExpressionParserRuleCall_9_2_0()); 
	    }
		lv_expressaoSynchronized_12_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"expressaoSynchronized",
        		lv_expressaoSynchronized_12_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStatementAccess().getRightParenthesisKeyword_9_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getCorpoSynchronizeStatementParserRuleCall_9_4_0()); 
	    }
		lv_corpoSynchronize_14_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"corpoSynchronize",
        		lv_corpoSynchronize_14_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_15='return' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getStatementAccess().getReturnKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getReturnExpressionParserRuleCall_10_1_0()); 
	    }
		lv_return_16_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"return",
        		lv_return_16_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getStatementAccess().getSemicolonKeyword_10_2());
    }
)
    |(	otherlv_18='throw' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getStatementAccess().getThrowKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getExececaoExpressionParserRuleCall_11_1_0()); 
	    }
		lv_exececao_19_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"exececao",
        		lv_exececao_19_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_20=';' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getStatementAccess().getSemicolonKeyword_11_2());
    }
)
    |(this_IDENTIFIER_21=RULE_IDENTIFIER
    { 
    newLeafNode(this_IDENTIFIER_21, grammarAccess.getStatementAccess().getIDENTIFIERTerminalRuleCall_12_0()); 
    }
	otherlv_22=':' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getStatementAccess().getColonKeyword_12_1());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getStatementParserRuleCall_12_2()); 
    }
    this_statement_23=rulestatement
    { 
        $current = $this_statement_23.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_24='break' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getStatementAccess().getBreakKeyword_13_0());
    }
(
(
		lv_break_25_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_break_25_0, grammarAccess.getStatementAccess().getBreakIDENTIFIERTerminalRuleCall_13_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"break",
        		lv_break_25_0, 
        		"IDENTIFIER");
	    }

)
)?	otherlv_26=';' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getStatementAccess().getSemicolonKeyword_13_2());
    }
)
    |(	otherlv_27='continue' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getStatementAccess().getContinueKeyword_14_0());
    }
(
(
		lv_continue_28_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_continue_28_0, grammarAccess.getStatementAccess().getContinueIDENTIFIERTerminalRuleCall_14_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"continue",
        		lv_continue_28_0, 
        		"IDENTIFIER");
	    }

)
)?	otherlv_29=';' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getStatementAccess().getSemicolonKeyword_14_2());
    }
)
    |	otherlv_30=';' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getStatementAccess().getSemicolonKeyword_15());
    }
)
;





// Entry rule entryRulevariable_declaration
entryRulevariable_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariable_declarationRule()); }
	 iv_rulevariable_declaration=rulevariable_declaration 
	 { $current=$iv_rulevariable_declaration.current; } 
	 EOF 
;

// Rule variable_declaration
rulevariable_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declarationAccess().getModificadorMODIFIERParserRuleCall_0_0()); 
	    }
		lv_modificador_0_0=ruleMODIFIER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declarationRule());
	        }
       		set(
       			$current, 
       			"modificador",
        		lv_modificador_0_0, 
        		"MODIFIER");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declarationAccess().getTipoVariavelTypeParserRuleCall_1_0_0()); 
	    }
		lv_tipoVariavel_1_0=ruletype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declarationRule());
	        }
       		set(
       			$current, 
       			"tipoVariavel",
        		lv_tipoVariavel_1_0, 
        		"type");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_2='void' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariable_declarationAccess().getVoidKeyword_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declarationAccess().getDeclaracaoVariaveisVariable_declaratorParserRuleCall_2_0()); 
	    }
		lv_declaracaoVariaveis_3_0=rulevariable_declarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declarationRule());
	        }
       		add(
       			$current, 
       			"declaracaoVariaveis",
        		lv_declaracaoVariaveis_3_0, 
        		"variable_declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariable_declarationAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declarationAccess().getDeclaracaoVariaveisVariable_declaratorParserRuleCall_3_1_0()); 
	    }
		lv_declaracaoVariaveis_5_0=rulevariable_declarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declarationRule());
	        }
       		add(
       			$current, 
       			"declaracaoVariaveis",
        		lv_declaracaoVariaveis_5_0, 
        		"variable_declarator");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVariable_declarationAccess().getSemicolonKeyword_4_0());
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declarationAccess().getBlocoVariavelStatement_blockParserRuleCall_4_1_0()); 
	    }
		lv_blocoVariavel_7_0=rulestatement_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declarationRule());
	        }
       		set(
       			$current, 
       			"blocoVariavel",
        		lv_blocoVariavel_7_0, 
        		"statement_block");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulevariable_declarator
entryRulevariable_declarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariable_declaratorRule()); }
	 iv_rulevariable_declarator=rulevariable_declarator 
	 { $current=$iv_rulevariable_declarator.current; } 
	 EOF 
;

// Rule variable_declarator
rulevariable_declarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariable_declaratorAccess().getLeftParenthesisKeyword_0_0());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVariable_declaratorAccess().getArglistParserRuleCall_0_1()); 
    }
    this_arglist_1=rulearglist
    { 
        $current = $this_arglist_1.current; 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariable_declaratorAccess().getRightParenthesisKeyword_0_2());
    }
)
    |((
(
		lv_nomeVariavel_3_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomeVariavel_3_0, grammarAccess.getVariable_declaratorAccess().getNomeVariavelIDENTIFIERTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariable_declaratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomeVariavel",
        		lv_nomeVariavel_3_0, 
        		"IDENTIFIER");
	    }

)
)(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariable_declaratorAccess().getLeftSquareBracketKeyword_1_1_0());
    }
	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariable_declaratorAccess().getRightSquareBracketKeyword_1_1_1());
    }
)*((
(
		lv_op_6_0=	'=' 
    {
        newLeafNode(lv_op_6_0, grammarAccess.getVariable_declaratorAccess().getOpEqualsSignKeyword_1_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariable_declaratorRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_6_0, "=");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declaratorAccess().getValorVariavelVariable_initializerParserRuleCall_1_2_1_0()); 
	    }
		lv_valorVariavel_7_0=rulevariable_initializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declaratorRule());
	        }
       		set(
       			$current, 
       			"valorVariavel",
        		lv_valorVariavel_7_0, 
        		"variable_initializer");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRulevariable_initializer
entryRulevariable_initializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariable_initializerRule()); }
	 iv_rulevariable_initializer=rulevariable_initializer 
	 { $current=$iv_rulevariable_initializer.current; } 
	 EOF 
;

// Rule variable_initializer
rulevariable_initializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_initializerAccess().getExpressaoVariavelExpressionParserRuleCall_0_0()); 
	    }
		lv_expressaoVariavel_0_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_initializerRule());
	        }
       		set(
       			$current, 
       			"expressaoVariavel",
        		lv_expressaoVariavel_0_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariable_initializerAccess().getLeftCurlyBracketKeyword_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_initializerAccess().getValorVariaveisVariable_initializerParserRuleCall_1_1_0_0()); 
	    }
		lv_valorVariaveis_2_0=rulevariable_initializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_initializerRule());
	        }
       		add(
       			$current, 
       			"valorVariaveis",
        		lv_valorVariaveis_2_0, 
        		"variable_initializer");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariable_initializerAccess().getCommaKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_initializerAccess().getValorVariaveisVariable_initializerParserRuleCall_1_1_1_1_0()); 
	    }
		lv_valorVariaveis_4_0=rulevariable_initializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_initializerRule());
	        }
       		add(
       			$current, 
       			"valorVariaveis",
        		lv_valorVariaveis_4_0, 
        		"variable_initializer");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariable_initializerAccess().getCommaKeyword_1_1_2());
    }
)?)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVariable_initializerAccess().getRightCurlyBracketKeyword_1_2());
    }
))
;





// Entry rule entryRuleif_statement
entryRuleif_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIf_statementRule()); }
	 iv_ruleif_statement=ruleif_statement 
	 { $current=$iv_ruleif_statement.current; } 
	 EOF 
;

// Rule if_statement
ruleif_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIf_statementAccess().getIfKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIf_statementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIf_statementAccess().getEspressaoIfExpressionParserRuleCall_2_0()); 
	    }
		lv_espressaoIf_2_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIf_statementRule());
	        }
       		set(
       			$current, 
       			"espressaoIf",
        		lv_espressaoIf_2_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIf_statementAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIf_statementAccess().getBlcoIfStatementParserRuleCall_4_0()); 
	    }
		lv_blcoIf_4_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIf_statementRule());
	        }
       		set(
       			$current, 
       			"blcoIf",
        		lv_blcoIf_4_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
(
(
rulestatement
)
)))=>(	otherlv_5='else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIf_statementAccess().getElseKeyword_5_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIf_statementAccess().getBlocoElseStatementParserRuleCall_5_0_1_0()); 
	    }
		lv_blocoElse_6_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIf_statementRule());
	        }
       		set(
       			$current, 
       			"blocoElse",
        		lv_blocoElse_6_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuledo_statement
entryRuledo_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDo_statementRule()); }
	 iv_ruledo_statement=ruledo_statement 
	 { $current=$iv_ruledo_statement.current; } 
	 EOF 
;

// Rule do_statement
ruledo_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='do' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDo_statementAccess().getDoKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDo_statementAccess().getBlocoDoStatementParserRuleCall_1_0()); 
	    }
		lv_blocoDo_1_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDo_statementRule());
	        }
       		set(
       			$current, 
       			"blocoDo",
        		lv_blocoDo_1_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='while' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDo_statementAccess().getWhileKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDo_statementAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDo_statementAccess().getExpressaoWhileExpressionParserRuleCall_4_0()); 
	    }
		lv_expressaoWhile_4_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDo_statementRule());
	        }
       		set(
       			$current, 
       			"expressaoWhile",
        		lv_expressaoWhile_4_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDo_statementAccess().getRightParenthesisKeyword_5());
    }
	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDo_statementAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRulewhile_statement
entryRulewhile_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhile_statementRule()); }
	 iv_rulewhile_statement=rulewhile_statement 
	 { $current=$iv_rulewhile_statement.current; } 
	 EOF 
;

// Rule while_statement
rulewhile_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='while' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhile_statementAccess().getWhileKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhile_statementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhile_statementAccess().getExpressaoWhileExpressionParserRuleCall_2_0()); 
	    }
		lv_expressaoWhile_2_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhile_statementRule());
	        }
       		set(
       			$current, 
       			"expressaoWhile",
        		lv_expressaoWhile_2_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhile_statementAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhile_statementAccess().getBlocoWhileStatementParserRuleCall_4_0()); 
	    }
		lv_blocoWhile_4_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhile_statementRule());
	        }
       		set(
       			$current, 
       			"blocoWhile",
        		lv_blocoWhile_4_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulefor_statement
entryRulefor_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFor_statementRule()); }
	 iv_rulefor_statement=rulefor_statement 
	 { $current=$iv_rulefor_statement.current; } 
	 EOF 
;

// Rule for_statement
rulefor_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='for' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFor_statementAccess().getForKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFor_statementAccess().getLeftParenthesisKeyword_1());
    }
(((
(
rulevariable_declaration
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getFor_statementAccess().getDeclaracaoVariavelVariable_declarationParserRuleCall_2_0_0()); 
	    }
		lv_declaracaoVariavel_2_0=rulevariable_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFor_statementRule());
	        }
       		set(
       			$current, 
       			"declaracaoVariavel",
        		lv_declaracaoVariavel_2_0, 
        		"variable_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFor_statementAccess().getExpressaoDeclaracaoExpressionParserRuleCall_2_1_0_0()); 
	    }
		lv_expressaoDeclaracao_3_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFor_statementRule());
	        }
       		set(
       			$current, 
       			"expressaoDeclaracao",
        		lv_expressaoDeclaracao_3_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFor_statementAccess().getSemicolonKeyword_2_1_1());
    }
)
    |	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFor_statementAccess().getSemicolonKeyword_2_2());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFor_statementAccess().getExpressaoForExpressionParserRuleCall_3_0()); 
	    }
		lv_expressaoFor_6_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFor_statementRule());
	        }
       		set(
       			$current, 
       			"expressaoFor",
        		lv_expressaoFor_6_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFor_statementAccess().getSemicolonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFor_statementAccess().getExpressaoIncrementoExpressionParserRuleCall_5_0()); 
	    }
		lv_expressaoIncremento_8_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFor_statementRule());
	        }
       		set(
       			$current, 
       			"expressaoIncremento",
        		lv_expressaoIncremento_8_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFor_statementAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFor_statementAccess().getBlocoForStatementParserRuleCall_7_0()); 
	    }
		lv_blocoFor_10_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFor_statementRule());
	        }
       		set(
       			$current, 
       			"blocoFor",
        		lv_blocoFor_10_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuletry_statement
entryRuletry_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTry_statementRule()); }
	 iv_ruletry_statement=ruletry_statement 
	 { $current=$iv_ruletry_statement.current; } 
	 EOF 
;

// Rule try_statement
ruletry_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='try' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTry_statementAccess().getTryKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTry_statementAccess().getBlocoTryStatement_blockParserRuleCall_1_0()); 
	    }
		lv_blocoTry_1_0=rulestatement_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTry_statementRule());
	        }
       		set(
       			$current, 
       			"blocoTry",
        		lv_blocoTry_1_0, 
        		"statement_block");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'catch' 
	'(' 
(
(
ruleparameter
)
)	')' 
(
(
rulestatement_block
)
)))=>(	otherlv_2='catch' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTry_statementAccess().getCatchKeyword_2_0_0());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTry_statementAccess().getLeftParenthesisKeyword_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTry_statementAccess().getParametroCatchParameterParserRuleCall_2_0_2_0()); 
	    }
		lv_parametroCatch_4_0=ruleparameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTry_statementRule());
	        }
       		set(
       			$current, 
       			"parametroCatch",
        		lv_parametroCatch_4_0, 
        		"parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTry_statementAccess().getRightParenthesisKeyword_2_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTry_statementAccess().getBlocoCatchStatement_blockParserRuleCall_2_0_4_0()); 
	    }
		lv_blocoCatch_6_0=rulestatement_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTry_statementRule());
	        }
       		set(
       			$current, 
       			"blocoCatch",
        		lv_blocoCatch_6_0, 
        		"statement_block");
	        afterParserOrEnumRuleCall();
	    }

)
)))*(((	'finally' 
(
(
rulestatement_block
)
)))=>(	otherlv_7='finally' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTry_statementAccess().getFinallyKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTry_statementAccess().getBlocoFinallyStatement_blockParserRuleCall_3_0_1_0()); 
	    }
		lv_blocoFinally_8_0=rulestatement_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTry_statementRule());
	        }
       		set(
       			$current, 
       			"blocoFinally",
        		lv_blocoFinally_8_0, 
        		"statement_block");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleswitch_statement
entryRuleswitch_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitch_statementRule()); }
	 iv_ruleswitch_statement=ruleswitch_statement 
	 { $current=$iv_ruleswitch_statement.current; } 
	 EOF 
;

// Rule switch_statement
ruleswitch_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='switch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSwitch_statementAccess().getSwitchKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitch_statementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitch_statementAccess().getExpressaoSwitchExpressionParserRuleCall_2_0()); 
	    }
		lv_expressaoSwitch_2_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitch_statementRule());
	        }
       		set(
       			$current, 
       			"expressaoSwitch",
        		lv_expressaoSwitch_2_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSwitch_statementAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSwitch_statementAccess().getLeftCurlyBracketKeyword_4());
    }
((	otherlv_5='case' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSwitch_statementAccess().getCaseKeyword_5_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitch_statementAccess().getExpressaoCasesExpressionParserRuleCall_5_0_1_0()); 
	    }
		lv_expressaoCases_6_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitch_statementRule());
	        }
       		add(
       			$current, 
       			"expressaoCases",
        		lv_expressaoCases_6_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSwitch_statementAccess().getColonKeyword_5_0_2());
    }
)
    |(	otherlv_8='default' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSwitch_statementAccess().getDefaultKeyword_5_1_0());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSwitch_statementAccess().getColonKeyword_5_1_1());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitch_statementAccess().getBlocoSwitchStatementParserRuleCall_5_2_0()); 
	    }
		lv_blocoSwitch_10_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitch_statementRule());
	        }
       		set(
       			$current, 
       			"blocoSwitch",
        		lv_blocoSwitch_10_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSwitch_statementAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleconstructor_declaration
entryRuleconstructor_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructor_declarationRule()); }
	 iv_ruleconstructor_declaration=ruleconstructor_declaration 
	 { $current=$iv_ruleconstructor_declaration.current; } 
	 EOF 
;

// Rule constructor_declaration
ruleconstructor_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstructor_declarationAccess().getModificadorMODIFIERParserRuleCall_0_0()); 
	    }
		lv_modificador_0_0=ruleMODIFIER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructor_declarationRule());
	        }
       		set(
       			$current, 
       			"modificador",
        		lv_modificador_0_0, 
        		"MODIFIER");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_nomeContrutor_1_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomeContrutor_1_0, grammarAccess.getConstructor_declarationAccess().getNomeContrutorIDENTIFIERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructor_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomeContrutor",
        		lv_nomeContrutor_1_0, 
        		"IDENTIFIER");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstructor_declarationAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructor_declarationAccess().getParametrosContrutorParameter_listParserRuleCall_3_0()); 
	    }
		lv_parametrosContrutor_3_0=ruleparameter_list		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructor_declarationRule());
	        }
       		set(
       			$current, 
       			"parametrosContrutor",
        		lv_parametrosContrutor_3_0, 
        		"parameter_list");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstructor_declarationAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructor_declarationAccess().getBlocoConstrutorStatement_blockParserRuleCall_5_0()); 
	    }
		lv_blocoConstrutor_5_0=rulestatement_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructor_declarationRule());
	        }
       		set(
       			$current, 
       			"blocoConstrutor",
        		lv_blocoConstrutor_5_0, 
        		"statement_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulestatic_initializer
entryRulestatic_initializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatic_initializerRule()); }
	 iv_rulestatic_initializer=rulestatic_initializer 
	 { $current=$iv_rulestatic_initializer.current; } 
	 EOF 
;

// Rule static_initializer
rulestatic_initializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='static' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStatic_initializerAccess().getStaticKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatic_initializerAccess().getBlocoEstaticoStatement_blockParserRuleCall_1_0()); 
	    }
		lv_blocoEstatico_1_0=rulestatement_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatic_initializerRule());
	        }
       		set(
       			$current, 
       			"blocoEstatico",
        		lv_blocoEstatico_1_0, 
        		"statement_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulecreating_expression
entryRulecreating_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCreating_expressionRule()); }
	 iv_rulecreating_expression=rulecreating_expression 
	 { $current=$iv_rulecreating_expression.current; } 
	 EOF 
;

// Rule creating_expression
rulecreating_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='new' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCreating_expressionAccess().getNewKeyword_0());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getCreating_expressionAccess().getNovoObjetoNameParserRuleCall_1_0_0_0()); 
	    }
		lv_novoObjeto_1_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreating_expressionRule());
	        }
       		set(
       			$current, 
       			"novoObjeto",
        		lv_novoObjeto_1_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCreating_expressionAccess().getParametrosCreating_auxParserRuleCall_1_0_1_0()); 
	    }
		lv_parametros_2_0=rulecreating_aux		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreating_expressionRule());
	        }
       		set(
       			$current, 
       			"parametros",
        		lv_parametros_2_0, 
        		"creating_aux");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getCreating_expressionAccess().getTipoObjetoType_specifierParserRuleCall_1_1_0_0()); 
	    }
		lv_tipoObjeto_3_0=ruletype_specifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreating_expressionRule());
	        }
       		set(
       			$current, 
       			"tipoObjeto",
        		lv_tipoObjeto_3_0, 
        		"type_specifier");
	        afterParserOrEnumRuleCall();
	    }

)
)((	'[' 
)=>(
(
		{ 
	        newCompositeNode(grammarAccess.getCreating_expressionAccess().getParametrosAuxParserRuleCall_1_1_1_0_0()); 
	    }
		lv_parametros_4_0=ruleaux		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreating_expressionRule());
	        }
       		set(
       			$current, 
       			"parametros",
        		lv_parametros_4_0, 
        		"aux");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCreating_expressionAccess().getLeftSquareBracketKeyword_1_1_2_0());
    }
	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCreating_expressionAccess().getRightSquareBracketKeyword_1_1_2_1());
    }
)*)
    |(	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCreating_expressionAccess().getLeftParenthesisKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreating_expressionAccess().getExpressaoNewExpressionParserRuleCall_1_2_1_0()); 
	    }
		lv_expressaoNew_8_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreating_expressionRule());
	        }
       		set(
       			$current, 
       			"expressaoNew",
        		lv_expressaoNew_8_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCreating_expressionAccess().getRightParenthesisKeyword_1_2_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getCreating_expressionAccess().getNovoNewBlockParserRuleCall_2_0()); 
	    }
		lv_novo_10_0=rulenewBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreating_expressionRule());
	        }
       		set(
       			$current, 
       			"novo",
        		lv_novo_10_0, 
        		"newBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleexp_aux
entryRuleexp_aux returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp_auxRule()); }
	 iv_ruleexp_aux=ruleexp_aux 
	 { $current=$iv_ruleexp_aux.current; } 
	 EOF 
;

// Rule exp_aux
ruleexp_aux returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((	'!' 
 | 	'true' 
 | 	'false' 
 | 	'-' 
 | 	'++' 
 | 	'--' 
 | 	'~' 
 | 	'new' 
 | 	'null' 
 | 	'super' 
 | 	'this' 
 | 	'(' 
 | 	RULE_DECIMAL_DIGITS | 	RULE_INTEGER_LITERAL | 	RULE_FLOAT_LITERAL | 	RULE_STRING | 	RULE_IDENTIFIER)=>
(
		{ 
	        newCompositeNode(grammarAccess.getExp_auxAccess().getExpressaoExpressionParserRuleCall_0_0_0()); 
	    }
		lv_expressao_0_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp_auxRule());
	        }
       		set(
       			$current, 
       			"expressao",
        		lv_expressao_0_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=')' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExp_auxAccess().getRightParenthesisKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExp_auxAccess().getTypeParserRuleCall_1_0()); 
    }
    this_type_2=ruletype
    { 
        $current = $this_type_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExp_auxAccess().getRightParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExp_auxAccess().getExpressaoExpressionParserRuleCall_1_2_0()); 
	    }
		lv_expressao_4_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp_auxRule());
	        }
       		set(
       			$current, 
       			"expressao",
        		lv_expressao_4_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleexpression
entryRuleexpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleexpression=ruleexpression 
	 { $current=$iv_ruleexpression.current; } 
	 EOF 
;

// Rule expression
ruleexpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getLogicalLogical_expressionParserRuleCall_0_0_0()); 
	    }
		lv_logical_0_0=rulelogical_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"logical",
        		lv_logical_0_0, 
        		"logical_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getNumericNumeric_expressionParserRuleCall_0_1_0()); 
	    }
		lv_numeric_1_0=rulenumeric_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"numeric",
        		lv_numeric_1_0, 
        		"numeric_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getBitBit_expressionParserRuleCall_0_2_0()); 
	    }
		lv_bit_2_0=rulebit_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"bit",
        		lv_bit_2_0, 
        		"bit_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getNovoCreating_expressionParserRuleCall_0_3_0()); 
	    }
		lv_novo_3_0=rulecreating_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"novo",
        		lv_novo_3_0, 
        		"creating_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getLiteralLiteral_expressionParserRuleCall_0_4_0()); 
	    }
		lv_literal_4_0=ruleliteral_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_4_0, 
        		"literal_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_5='null' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExpressionAccess().getNullKeyword_0_5());
    }

    |	otherlv_6='super' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpressionAccess().getSuperKeyword_0_6());
    }

    |	otherlv_7='this' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExpressionAccess().getThisKeyword_0_7());
    }

    |(
(
		lv_identificador_8_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_identificador_8_0, grammarAccess.getExpressionAccess().getIdentificadorIDENTIFIERTerminalRuleCall_0_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identificador",
        		lv_identificador_8_0, 
        		"IDENTIFIER");
	    }

)
)
    |(	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_0_9_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getExp_auxParserRuleCall_0_9_1()); 
    }
    this_exp_aux_10=ruleexp_aux
    { 
        $current = $this_exp_aux_10.current; 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getExpressoesExpression_auxParserRuleCall_1_0()); 
	    }
		lv_expressoes_11_0=ruleexpression_aux		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"expressoes",
        		lv_expressoes_11_0, 
        		"expression_aux");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleexpression_aux
entryRuleexpression_aux returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpression_auxRule()); }
	 iv_ruleexpression_aux=ruleexpression_aux 
	 { $current=$iv_ruleexpression_aux.current; } 
	 EOF 
;

// Rule expression_aux
ruleexpression_aux returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpression_auxAccess().getLeftParenthesisKeyword_0_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getParametrosArglistParserRuleCall_0_0_0_1_0()); 
	    }
		lv_parametros_1_0=rulearglist		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"parametros",
        		lv_parametros_1_0, 
        		"arglist");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpression_auxAccess().getRightParenthesisKeyword_0_0_0_2());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpression_auxAccess().getAuxParserRuleCall_0_0_1()); 
    }
    this_aux_3=ruleaux
    { 
        $current = $this_aux_3.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExpression_auxAccess().getFullStopKeyword_0_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpExpressionParserRuleCall_0_0_2_1_0()); 
	    }
		lv_exp_5_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_5_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpression_auxAccess().getCommaKeyword_0_0_3_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpressionParserRuleCall_0_0_3_1()); 
    }
    this_expression_7=ruleexpression
    { 
        $current = $this_expression_7.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_8='instanceof' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExpression_auxAccess().getInstanceofKeyword_0_0_4_0());
    }
((	RULE_IDENTIFIER)=>
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpression_auxAccess().getNameParserRuleCall_0_0_4_1()); 
    }
    this_name_9=rulename
    { 
        $current = $this_name_9.current; 
        afterParserOrEnumRuleCall();
    }
)))
    |(((	'+' 
 | 	'+=' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getOpMais_auxParserRuleCall_0_1_0_0()); 
	    }
		lv_op_10_0=rulemais_aux		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_10_0, 
        		"mais_aux");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpExpressionParserRuleCall_0_1_1_0()); 
	    }
		lv_exp_11_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_11_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
(
		lv_operador_12_1=	'++' 
    {
        newLeafNode(lv_operador_12_1, grammarAccess.getExpression_auxAccess().getOperadorPlusSignPlusSignKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_12_1, null);
	    }

    |		lv_operador_12_2=	'--' 
    {
        newLeafNode(lv_operador_12_2, grammarAccess.getExpression_auxAccess().getOperadorHyphenMinusHyphenMinusKeyword_0_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_12_2, null);
	    }

)

)
)
    |((((	'+' 
 | 	'+=' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getOpMais_auxParserRuleCall_0_3_0_0_0()); 
	    }
		lv_op_13_0=rulemais_aux		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_13_0, 
        		"mais_aux");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_operador_14_0=	'-' 
    {
        newLeafNode(lv_operador_14_0, grammarAccess.getExpression_auxAccess().getOperadorHyphenMinusKeyword_0_3_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_14_0, "-");
	    }

)
)
    |(
(
		lv_operador_15_0=	'-=' 
    {
        newLeafNode(lv_operador_15_0, grammarAccess.getExpression_auxAccess().getOperadorHyphenMinusEqualsSignKeyword_0_3_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_15_0, "-=");
	    }

)
)
    |(
(
		lv_operador_16_0=	'*' 
    {
        newLeafNode(lv_operador_16_0, grammarAccess.getExpression_auxAccess().getOperadorAsteriskKeyword_0_3_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_16_0, "*");
	    }

)
)
    |(
(
		lv_operador_17_0=	'*=' 
    {
        newLeafNode(lv_operador_17_0, grammarAccess.getExpression_auxAccess().getOperadorAsteriskEqualsSignKeyword_0_3_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_17_0, "*=");
	    }

)
)
    |(
(
		lv_operador_18_0=	'/' 
    {
        newLeafNode(lv_operador_18_0, grammarAccess.getExpression_auxAccess().getOperadorSolidusKeyword_0_3_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_18_0, "/");
	    }

)
)
    |(
(
		lv_operador_19_0=	'/=' 
    {
        newLeafNode(lv_operador_19_0, grammarAccess.getExpression_auxAccess().getOperadorSolidusEqualsSignKeyword_0_3_0_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_19_0, "/=");
	    }

)
)
    |(
(
		lv_operador_20_0=	'%' 
    {
        newLeafNode(lv_operador_20_0, grammarAccess.getExpression_auxAccess().getOperadorPercentSignKeyword_0_3_0_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_20_0, "\%");
	    }

)
)
    |(
(
		lv_operador_21_0=	'%=' 
    {
        newLeafNode(lv_operador_21_0, grammarAccess.getExpression_auxAccess().getOperadorPercentSignEqualsSignKeyword_0_3_0_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_21_0, "\%=");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpExpressionParserRuleCall_0_3_1_0()); 
	    }
		lv_exp_22_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_22_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((
(
(
		lv_operador_23_1=	'&' 
    {
        newLeafNode(lv_operador_23_1, grammarAccess.getExpression_auxAccess().getOperadorAmpersandKeyword_0_4_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_1, null);
	    }

    |		lv_operador_23_2=	'&=' 
    {
        newLeafNode(lv_operador_23_2, grammarAccess.getExpression_auxAccess().getOperadorAmpersandEqualsSignKeyword_0_4_0_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_2, null);
	    }

    |		lv_operador_23_3=	'|' 
    {
        newLeafNode(lv_operador_23_3, grammarAccess.getExpression_auxAccess().getOperadorVerticalLineKeyword_0_4_0_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_3, null);
	    }

    |		lv_operador_23_4=	'|=' 
    {
        newLeafNode(lv_operador_23_4, grammarAccess.getExpression_auxAccess().getOperadorVerticalLineEqualsSignKeyword_0_4_0_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_4, null);
	    }

    |		lv_operador_23_5=	'^' 
    {
        newLeafNode(lv_operador_23_5, grammarAccess.getExpression_auxAccess().getOperadorCircumflexAccentKeyword_0_4_0_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_5, null);
	    }

    |		lv_operador_23_6=	'^=' 
    {
        newLeafNode(lv_operador_23_6, grammarAccess.getExpression_auxAccess().getOperadorCircumflexAccentEqualsSignKeyword_0_4_0_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_6, null);
	    }

    |		lv_operador_23_7=	'&&' 
    {
        newLeafNode(lv_operador_23_7, grammarAccess.getExpression_auxAccess().getOperadorAmpersandAmpersandKeyword_0_4_0_0_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_7, null);
	    }

    |		lv_operador_23_8=	'||' 
    {
        newLeafNode(lv_operador_23_8, grammarAccess.getExpression_auxAccess().getOperadorVerticalLineVerticalLineKeyword_0_4_0_0_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_8, null);
	    }

    |		lv_operador_23_9=	'||=' 
    {
        newLeafNode(lv_operador_23_9, grammarAccess.getExpression_auxAccess().getOperadorVerticalLineVerticalLineEqualsSignKeyword_0_4_0_0_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_9, null);
	    }

    |		lv_operador_23_10=	'%' 
    {
        newLeafNode(lv_operador_23_10, grammarAccess.getExpression_auxAccess().getOperadorPercentSignKeyword_0_4_0_0_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_10, null);
	    }

    |		lv_operador_23_11=	'%=' 
    {
        newLeafNode(lv_operador_23_11, grammarAccess.getExpression_auxAccess().getOperadorPercentSignEqualsSignKeyword_0_4_0_0_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_23_11, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpExpressionParserRuleCall_0_4_0_1_0()); 
	    }
		lv_exp_24_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_24_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_operador_25_0=	'?' 
    {
        newLeafNode(lv_operador_25_0, grammarAccess.getExpression_auxAccess().getOperadorQuestionMarkKeyword_0_4_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_25_0, "?");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpExpressionParserRuleCall_0_4_1_1_0()); 
	    }
		lv_exp_26_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_26_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operador_27_0=	':' 
    {
        newLeafNode(lv_operador_27_0, grammarAccess.getExpression_auxAccess().getOperadorColonKeyword_0_4_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_27_0, ":");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpExpressionParserRuleCall_0_4_1_3_0()); 
	    }
		lv_exp_28_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_28_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
(
		lv_operador_29_1=	'>' 
    {
        newLeafNode(lv_operador_29_1, grammarAccess.getExpression_auxAccess().getOperadorGreaterThanSignKeyword_0_4_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_29_1, null);
	    }

    |		lv_operador_29_2=	'<' 
    {
        newLeafNode(lv_operador_29_2, grammarAccess.getExpression_auxAccess().getOperadorLessThanSignKeyword_0_4_2_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_29_2, null);
	    }

    |		lv_operador_29_3=	'>=' 
    {
        newLeafNode(lv_operador_29_3, grammarAccess.getExpression_auxAccess().getOperadorGreaterThanSignEqualsSignKeyword_0_4_2_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_29_3, null);
	    }

    |		lv_operador_29_4=	'<=' 
    {
        newLeafNode(lv_operador_29_4, grammarAccess.getExpression_auxAccess().getOperadorLessThanSignEqualsSignKeyword_0_4_2_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_29_4, null);
	    }

    |		lv_operador_29_5=	'==' 
    {
        newLeafNode(lv_operador_29_5, grammarAccess.getExpression_auxAccess().getOperadorEqualsSignEqualsSignKeyword_0_4_2_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_29_5, null);
	    }

    |		lv_operador_29_6=	'!=' 
    {
        newLeafNode(lv_operador_29_6, grammarAccess.getExpression_auxAccess().getOperadorExclamationMarkEqualsSignKeyword_0_4_2_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_29_6, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpExpressionParserRuleCall_0_4_2_1_0()); 
	    }
		lv_exp_30_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_30_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
(
		lv_operador_31_1=	'>>=' 
    {
        newLeafNode(lv_operador_31_1, grammarAccess.getExpression_auxAccess().getOperadorGreaterThanSignGreaterThanSignEqualsSignKeyword_0_4_3_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_31_1, null);
	    }

    |		lv_operador_31_2=	'<<' 
    {
        newLeafNode(lv_operador_31_2, grammarAccess.getExpression_auxAccess().getOperadorLessThanSignLessThanSignKeyword_0_4_3_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_31_2, null);
	    }

    |		lv_operador_31_3=	'>>' 
    {
        newLeafNode(lv_operador_31_3, grammarAccess.getExpression_auxAccess().getOperadorGreaterThanSignGreaterThanSignKeyword_0_4_3_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_31_3, null);
	    }

    |		lv_operador_31_4=	'>>>' 
    {
        newLeafNode(lv_operador_31_4, grammarAccess.getExpression_auxAccess().getOperadorGreaterThanSignGreaterThanSignGreaterThanSignKeyword_0_4_3_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpression_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_31_4, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpExpressionParserRuleCall_0_4_3_1_0()); 
	    }
		lv_exp_32_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_32_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpression_auxAccess().getExpressoesExpression_auxParserRuleCall_1_0()); 
	    }
		lv_expressoes_33_0=ruleexpression_aux		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpression_auxRule());
	        }
       		set(
       			$current, 
       			"expressoes",
        		lv_expressoes_33_0, 
        		"expression_aux");
	        afterParserOrEnumRuleCall();
	    }

)
))?
;





// Entry rule entryRulemais_aux
entryRulemais_aux returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMais_auxRule()); }
	 iv_rulemais_aux=rulemais_aux 
	 { $current=$iv_rulemais_aux.current; } 
	 EOF 
;

// Rule mais_aux
rulemais_aux returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operador_0_0=	'+' 
    {
        newLeafNode(lv_operador_0_0, grammarAccess.getMais_auxAccess().getOperadorPlusSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMais_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_0_0, "+");
	    }

)
)
    |(
(
		lv_operador_1_0=	'+=' 
    {
        newLeafNode(lv_operador_1_0, grammarAccess.getMais_auxAccess().getOperadorPlusSignEqualsSignKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMais_auxRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_1_0, "+=");
	    }

)
))
;





// Entry rule entryRulenewBlock
entryRulenewBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNewBlockRule()); }
	 iv_rulenewBlock=rulenewBlock 
	 { $current=$iv_rulenewBlock.current; } 
	 EOF 
;

// Rule newBlock
rulenewBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNewBlockAccess().getLeftCurlyBracketKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNewBlockAccess().getConstructor_declarationParserRuleCall_1()); 
    }
    this_constructor_declaration_1=ruleconstructor_declaration
    { 
        $current = $this_constructor_declaration_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNewBlockAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRulecreating_aux
entryRulecreating_aux returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCreating_auxRule()); }
	 iv_rulecreating_aux=rulecreating_aux 
	 { $current=$iv_rulecreating_aux.current; } 
	 EOF 
;

// Rule creating_aux
rulecreating_aux returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((	'(' 
)=>	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCreating_auxAccess().getLeftParenthesisKeyword_0_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCreating_auxAccess().getArgumentosArglistParserRuleCall_0_1_0()); 
	    }
		lv_argumentos_1_0=rulearglist		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreating_auxRule());
	        }
       		set(
       			$current, 
       			"argumentos",
        		lv_argumentos_1_0, 
        		"arglist");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCreating_auxAccess().getRightParenthesisKeyword_0_2());
    }
)
    |(((	'[' 
)=>
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCreating_auxAccess().getAuxParserRuleCall_1_0_0()); 
    }
    this_aux_3=ruleaux
    { 
        $current = $this_aux_3.current; 
        afterParserOrEnumRuleCall();
    }
)?(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCreating_auxAccess().getLeftSquareBracketKeyword_1_1_0());
    }
	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCreating_auxAccess().getRightSquareBracketKeyword_1_1_1());
    }
)*))
;





// Entry rule entryRuleaux
entryRuleaux returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuxRule()); }
	 iv_ruleaux=ruleaux 
	 { $current=$iv_ruleaux.current; } 
	 EOF 
;

// Rule aux
ruleaux returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAuxAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAuxAccess().getEspressaoExpressionParserRuleCall_1_0()); 
	    }
		lv_espressao_1_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuxRule());
	        }
       		set(
       			$current, 
       			"espressao",
        		lv_espressao_1_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAuxAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleliteral_expression
entryRuleliteral_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteral_expressionRule()); }
	 iv_ruleliteral_expression=ruleliteral_expression 
	 { $current=$iv_ruleliteral_expression.current; } 
	 EOF 
;

// Rule literal_expression
ruleliteral_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	RULE_DECIMAL_DIGITS)=>
(
		lv_decimal_0_0=RULE_DECIMAL_DIGITS
		{
			newLeafNode(lv_decimal_0_0, grammarAccess.getLiteral_expressionAccess().getDecimalDECIMAL_DIGITSTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteral_expressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"decimal",
        		lv_decimal_0_0, 
        		"DECIMAL_DIGITS");
	    }

)
)
    |(
(
		lv_inteiro_1_0=RULE_INTEGER_LITERAL
		{
			newLeafNode(lv_inteiro_1_0, grammarAccess.getLiteral_expressionAccess().getInteiroINTEGER_LITERALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteral_expressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"inteiro",
        		lv_inteiro_1_0, 
        		"INTEGER_LITERAL");
	    }

)
)
    |(
(
		lv_l_float_2_0=RULE_FLOAT_LITERAL
		{
			newLeafNode(lv_l_float_2_0, grammarAccess.getLiteral_expressionAccess().getL_floatFLOAT_LITERALTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteral_expressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"l_float",
        		lv_l_float_2_0, 
        		"FLOAT_LITERAL");
	    }

)
)
    |(
(
		lv_string_3_0=RULE_STRING
		{
			newLeafNode(lv_string_3_0, grammarAccess.getLiteral_expressionAccess().getStringSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteral_expressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulelogical_expression
entryRulelogical_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogical_expressionRule()); }
	 iv_rulelogical_expression=rulelogical_expression 
	 { $current=$iv_rulelogical_expression.current; } 
	 EOF 
;

// Rule logical_expression
rulelogical_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_operador_0_0=	'!' 
    {
        newLeafNode(lv_operador_0_0, grammarAccess.getLogical_expressionAccess().getOperadorExclamationMarkKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_expressionRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_0_0, "!");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogical_expressionAccess().getExpExpressionParserRuleCall_0_1_0()); 
	    }
		lv_exp_1_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogical_expressionRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_1_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_operador_2_0=	'true' 
    {
        newLeafNode(lv_operador_2_0, grammarAccess.getLogical_expressionAccess().getOperadorTrueKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_expressionRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_2_0, "true");
	    }

)
)
    |(
(
		lv_operador_3_0=	'false' 
    {
        newLeafNode(lv_operador_3_0, grammarAccess.getLogical_expressionAccess().getOperadorFalseKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogical_expressionRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_3_0, "false");
	    }

)
))
;





// Entry rule entryRulebit_expression
entryRulebit_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBit_expressionRule()); }
	 iv_rulebit_expression=rulebit_expression 
	 { $current=$iv_rulebit_expression.current; } 
	 EOF 
;

// Rule bit_expression
rulebit_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operador_0_0=	'~' 
    {
        newLeafNode(lv_operador_0_0, grammarAccess.getBit_expressionAccess().getOperadorTildeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBit_expressionRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_0_0, "~");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBit_expressionAccess().getExpressaoExpressionParserRuleCall_1_0()); 
	    }
		lv_expressao_1_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBit_expressionRule());
	        }
       		set(
       			$current, 
       			"expressao",
        		lv_expressao_1_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulenumeric_expression
entryRulenumeric_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumeric_expressionRule()); }
	 iv_rulenumeric_expression=rulenumeric_expression 
	 { $current=$iv_rulenumeric_expression.current; } 
	 EOF 
;

// Rule numeric_expression
rulenumeric_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_operador_0_1=	'-' 
    {
        newLeafNode(lv_operador_0_1, grammarAccess.getNumeric_expressionAccess().getOperadorHyphenMinusKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumeric_expressionRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_0_1, null);
	    }

    |		lv_operador_0_2=	'++' 
    {
        newLeafNode(lv_operador_0_2, grammarAccess.getNumeric_expressionAccess().getOperadorPlusSignPlusSignKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumeric_expressionRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_0_2, null);
	    }

    |		lv_operador_0_3=	'--' 
    {
        newLeafNode(lv_operador_0_3, grammarAccess.getNumeric_expressionAccess().getOperadorHyphenMinusHyphenMinusKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumeric_expressionRule());
	        }
       		setWithLastConsumed($current, "operador", lv_operador_0_3, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumeric_expressionAccess().getExpressaoExpressionParserRuleCall_1_0()); 
	    }
		lv_expressao_1_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumeric_expressionRule());
	        }
       		set(
       			$current, 
       			"expressao",
        		lv_expressao_1_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulearglist
entryRulearglist returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArglistRule()); }
	 iv_rulearglist=rulearglist 
	 { $current=$iv_rulearglist.current; } 
	 EOF 
;

// Rule arglist
rulearglist returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getArglistAccess().getExpressoesArgumentosExpressionParserRuleCall_0_0_0()); 
	    }
		lv_expressoesArgumentos_0_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArglistRule());
	        }
       		add(
       			$current, 
       			"expressoesArgumentos",
        		lv_expressoesArgumentos_0_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArglistAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArglistAccess().getExpressoesArgumentosExpressionParserRuleCall_0_1_1_0()); 
	    }
		lv_expressoesArgumentos_2_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArglistRule());
	        }
       		add(
       			$current, 
       			"expressoesArgumentos",
        		lv_expressoesArgumentos_2_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(	otherlv_3='"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArglistAccess().getQuotationMarkKeyword_1_0());
    }
this_STRING_4=RULE_STRING
    { 
    newLeafNode(this_STRING_4, grammarAccess.getArglistAccess().getSTRINGTerminalRuleCall_1_1()); 
    }
	otherlv_5='"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArglistAccess().getQuotationMarkKeyword_1_2());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArglistAccess().getTipoParametroTypeParserRuleCall_2_0_0()); 
	    }
		lv_tipoParametro_6_0=ruletype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArglistRule());
	        }
       		add(
       			$current, 
       			"tipoParametro",
        		lv_tipoParametro_6_0, 
        		"type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_nomeParametro_7_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomeParametro_7_0, grammarAccess.getArglistAccess().getNomeParametroIDENTIFIERTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArglistRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"nomeParametro",
        		lv_nomeParametro_7_0, 
        		"IDENTIFIER");
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getArglistAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArglistAccess().getTipoParametroTypeParserRuleCall_2_2_1_0()); 
	    }
		lv_tipoParametro_9_0=ruletype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArglistRule());
	        }
       		add(
       			$current, 
       			"tipoParametro",
        		lv_tipoParametro_9_0, 
        		"type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_nomeParametro_10_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomeParametro_10_0, grammarAccess.getArglistAccess().getNomeParametroIDENTIFIERTerminalRuleCall_2_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArglistRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"nomeParametro",
        		lv_nomeParametro_10_0, 
        		"IDENTIFIER");
	    }

)
))*))
;





// Entry rule entryRulename
entryRulename returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	 iv_rulename=rulename 
	 { $current=$iv_rulename.current; } 
	 EOF 
;

// Rule name
rulename returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nome_0_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nome_0_0, grammarAccess.getNameAccess().getNomeIDENTIFIERTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nome",
        		lv_nome_0_0, 
        		"IDENTIFIER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNameAccess().getPacotePackage_name_auxParserRuleCall_1_0()); 
	    }
		lv_pacote_1_0=rulepackage_name_aux		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameRule());
	        }
       		set(
       			$current, 
       			"pacote",
        		lv_pacote_1_0, 
        		"package_name_aux");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulepackage_name_aux
entryRulepackage_name_aux returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackage_name_auxRule()); }
	 iv_rulepackage_name_aux=rulepackage_name_aux 
	 { $current=$iv_rulepackage_name_aux.current; } 
	 EOF 
;

// Rule package_name_aux
rulepackage_name_aux returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='.' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackage_name_auxAccess().getFullStopKeyword_0());
    }
(
(
		lv_nomePacote_1_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_nomePacote_1_0, grammarAccess.getPackage_name_auxAccess().getNomePacoteIDENTIFIERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackage_name_auxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomePacote",
        		lv_nomePacote_1_0, 
        		"IDENTIFIER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackage_name_auxAccess().getPacotePackage_name_auxParserRuleCall_2_0()); 
	    }
		lv_pacote_2_0=rulepackage_name_aux		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackage_name_auxRule());
	        }
       		set(
       			$current, 
       			"pacote",
        		lv_pacote_2_0, 
        		"package_name_aux");
	        afterParserOrEnumRuleCall();
	    }

)
))*
;





// Entry rule entryRuletype_specifier
entryRuletype_specifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getType_specifierRule()); }
	 iv_ruletype_specifier=ruletype_specifier 
	 { $current=$iv_ruletype_specifier.current; } 
	 EOF 
;

// Rule type_specifier
ruletype_specifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nome_0_0=	'boolean' 
    {
        newLeafNode(lv_nome_0_0, grammarAccess.getType_specifierAccess().getNomeBooleanKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_specifierRule());
	        }
       		setWithLastConsumed($current, "nome", lv_nome_0_0, "boolean");
	    }

)
)
    |(
(
		lv_nome_1_0=	'byte' 
    {
        newLeafNode(lv_nome_1_0, grammarAccess.getType_specifierAccess().getNomeByteKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_specifierRule());
	        }
       		setWithLastConsumed($current, "nome", lv_nome_1_0, "byte");
	    }

)
)
    |(
(
		lv_nome_2_0=	'char' 
    {
        newLeafNode(lv_nome_2_0, grammarAccess.getType_specifierAccess().getNomeCharKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_specifierRule());
	        }
       		setWithLastConsumed($current, "nome", lv_nome_2_0, "char");
	    }

)
)
    |(
(
		lv_nome_3_0=	'short' 
    {
        newLeafNode(lv_nome_3_0, grammarAccess.getType_specifierAccess().getNomeShortKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_specifierRule());
	        }
       		setWithLastConsumed($current, "nome", lv_nome_3_0, "short");
	    }

)
)
    |(
(
		lv_nome_4_0=	'int' 
    {
        newLeafNode(lv_nome_4_0, grammarAccess.getType_specifierAccess().getNomeIntKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_specifierRule());
	        }
       		setWithLastConsumed($current, "nome", lv_nome_4_0, "int");
	    }

)
)
    |(
(
		lv_nome_5_0=	'float' 
    {
        newLeafNode(lv_nome_5_0, grammarAccess.getType_specifierAccess().getNomeFloatKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_specifierRule());
	        }
       		setWithLastConsumed($current, "nome", lv_nome_5_0, "float");
	    }

)
)
    |(
(
		lv_nome_6_0=	'long' 
    {
        newLeafNode(lv_nome_6_0, grammarAccess.getType_specifierAccess().getNomeLongKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_specifierRule());
	        }
       		setWithLastConsumed($current, "nome", lv_nome_6_0, "long");
	    }

)
)
    |(
(
		lv_nome_7_0=	'double' 
    {
        newLeafNode(lv_nome_7_0, grammarAccess.getType_specifierAccess().getNomeDoubleKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getType_specifierRule());
	        }
       		setWithLastConsumed($current, "nome", lv_nome_7_0, "double");
	    }

)
))
;





// Entry rule entryRuletype
entryRuletype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruletype=ruletype 
	 { $current=$iv_ruletype.current; } 
	 EOF 
;

// Rule type
ruletype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getPrimitivoType_specifierParserRuleCall_0_0_0()); 
	    }
		lv_primitivo_0_0=ruletype_specifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"primitivo",
        		lv_primitivo_0_0, 
        		"type_specifier");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getObjetoNameParserRuleCall_0_1_0()); 
	    }
		lv_objeto_1_0=rulename		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"objeto",
        		lv_objeto_1_0, 
        		"name");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0());
    }
	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_1());
    }
)*)
;





// Entry rule entryRuleMODIFIER
entryRuleMODIFIER returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMODIFIERRule()); }
	 iv_ruleMODIFIER=ruleMODIFIER 
	 { $current=$iv_ruleMODIFIER.current; } 
	 EOF 
;

// Rule MODIFIER
ruleMODIFIER returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_modificador_0_0=	'public' 
    {
        newLeafNode(lv_modificador_0_0, grammarAccess.getMODIFIERAccess().getModificadorPublicKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_0_0, "public");
	    }

)
)
    |(
(
		lv_modificador_1_0=	'private' 
    {
        newLeafNode(lv_modificador_1_0, grammarAccess.getMODIFIERAccess().getModificadorPrivateKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_1_0, "private");
	    }

)
)
    |(
(
		lv_modificador_2_0=	'protected' 
    {
        newLeafNode(lv_modificador_2_0, grammarAccess.getMODIFIERAccess().getModificadorProtectedKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_2_0, "protected");
	    }

)
)
    |(
(
		lv_modificador_3_0=	'static' 
    {
        newLeafNode(lv_modificador_3_0, grammarAccess.getMODIFIERAccess().getModificadorStaticKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_3_0, "static");
	    }

)
)
    |(
(
		lv_modificador_4_0=	'final' 
    {
        newLeafNode(lv_modificador_4_0, grammarAccess.getMODIFIERAccess().getModificadorFinalKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_4_0, "final");
	    }

)
)
    |(
(
		lv_modificador_5_0=	'native' 
    {
        newLeafNode(lv_modificador_5_0, grammarAccess.getMODIFIERAccess().getModificadorNativeKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_5_0, "native");
	    }

)
)
    |(
(
		lv_modificador_6_0=	'synchronized' 
    {
        newLeafNode(lv_modificador_6_0, grammarAccess.getMODIFIERAccess().getModificadorSynchronizedKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_6_0, "synchronized");
	    }

)
)
    |(
(
		lv_modificador_7_0=	'abstract' 
    {
        newLeafNode(lv_modificador_7_0, grammarAccess.getMODIFIERAccess().getModificadorAbstractKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_7_0, "abstract");
	    }

)
)
    |(
(
		lv_modificador_8_0=	'threadsafe' 
    {
        newLeafNode(lv_modificador_8_0, grammarAccess.getMODIFIERAccess().getModificadorThreadsafeKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_8_0, "threadsafe");
	    }

)
)
    |(
(
		lv_modificador_9_0=	'transient' 
    {
        newLeafNode(lv_modificador_9_0, grammarAccess.getMODIFIERAccess().getModificadorTransientKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMODIFIERRule());
	        }
       		setWithLastConsumed($current, "modificador", lv_modificador_9_0, "transient");
	    }

)
))
;





RULE_FLOAT_LITERAL : ('0'..'9')+ '.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?;

RULE_EXPONENT_PART : 'e' ('+'|'-')? RULE_DECIMAL_DIGITS;

RULE_FLOAT_TYPE_SUFFIX : ('f'|'d');

RULE_DECIMAL_DIGITS : RULE_INT;

RULE_INTEGER_LITERAL : (RULE_DECIMAL_DIGITS 'l'?|'0x' ('0'..'9'|'a'..'f')+ 'l'?);

RULE_IDENTIFIER : RULE_ID;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


