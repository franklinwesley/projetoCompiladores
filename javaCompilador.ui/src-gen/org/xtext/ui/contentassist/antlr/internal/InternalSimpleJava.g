/*
 * generated by Xtext
 */
grammar InternalSimpleJava;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.SimpleJavaGrammarAccess;

}

@parser::members {
 
 	private SimpleJavaGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SimpleJavaGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
(rule__Model__GreetingsAssignment)*
{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGreeting
entryRuleGreeting 
:
{ before(grammarAccess.getGreetingRule()); }
	 ruleGreeting
{ after(grammarAccess.getGreetingRule()); } 
	 EOF 
;

// Rule Greeting
ruleGreeting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGreetingAccess().getGroup()); }
(rule__Greeting__Group__0)
{ after(grammarAccess.getGreetingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepackage_name
entryRulepackage_name 
:
{ before(grammarAccess.getPackage_nameRule()); }
	 rulepackage_name
{ after(grammarAccess.getPackage_nameRule()); } 
	 EOF 
;

// Rule package_name
rulepackage_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackage_nameAccess().getGroup()); }
(rule__Package_name__Group__0)
{ after(grammarAccess.getPackage_nameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepackage_name_aux
entryRulepackage_name_aux 
:
{ before(grammarAccess.getPackage_name_auxRule()); }
	 rulepackage_name_aux
{ after(grammarAccess.getPackage_name_auxRule()); } 
	 EOF 
;

// Rule package_name_aux
rulepackage_name_aux
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackage_name_auxAccess().getGroup()); }
(rule__Package_name_aux__Group__0)?
{ after(grammarAccess.getPackage_name_auxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclass_interface_name
entryRuleclass_interface_name 
:
{ before(grammarAccess.getClass_interface_nameRule()); }
	 ruleclass_interface_name
{ after(grammarAccess.getClass_interface_nameRule()); } 
	 EOF 
;

// Rule class_interface_name
ruleclass_interface_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_interface_nameAccess().getAlternatives()); }
(rule__Class_interface_name__Alternatives)
{ after(grammarAccess.getClass_interface_nameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuletype_specifier
entryRuletype_specifier 
:
{ before(grammarAccess.getType_specifierRule()); }
	 ruletype_specifier
{ after(grammarAccess.getType_specifierRule()); } 
	 EOF 
;

// Rule type_specifier
ruletype_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_specifierAccess().getAlternatives()); }
(rule__Type_specifier__Alternatives)
{ after(grammarAccess.getType_specifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype
entryRuletype 
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparameter
entryRuleparameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleparameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule parameter
ruleparameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparameter_list
entryRuleparameter_list 
:
{ before(grammarAccess.getParameter_listRule()); }
	 ruleparameter_list
{ after(grammarAccess.getParameter_listRule()); } 
	 EOF 
;

// Rule parameter_list
ruleparameter_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameter_listAccess().getGroup()); }
(rule__Parameter_list__Group__0)
{ after(grammarAccess.getParameter_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledoc_comment
entryRuledoc_comment 
:
{ before(grammarAccess.getDoc_commentRule()); }
	 ruledoc_comment
{ after(grammarAccess.getDoc_commentRule()); } 
	 EOF 
;

// Rule doc_comment
ruledoc_comment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoc_commentAccess().getGroup()); }
(rule__Doc_comment__Group__0)
{ after(grammarAccess.getDoc_commentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulefield_declaration
entryRulefield_declaration 
:
{ before(grammarAccess.getField_declarationRule()); }
	 rulefield_declaration
{ after(grammarAccess.getField_declarationRule()); } 
	 EOF 
;

// Rule field_declaration
rulefield_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getField_declarationAccess().getAlternatives()); }
(rule__Field_declaration__Alternatives)
{ after(grammarAccess.getField_declarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatic_initializer
entryRulestatic_initializer 
:
{ before(grammarAccess.getStatic_initializerRule()); }
	 rulestatic_initializer
{ after(grammarAccess.getStatic_initializerRule()); } 
	 EOF 
;

// Rule static_initializer
rulestatic_initializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatic_initializerAccess().getGroup()); }
(rule__Static_initializer__Group__0)
{ after(grammarAccess.getStatic_initializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemodifier_aux
entryRulemodifier_aux 
:
{ before(grammarAccess.getModifier_auxRule()); }
	 rulemodifier_aux
{ after(grammarAccess.getModifier_auxRule()); } 
	 EOF 
;

// Rule modifier_aux
rulemodifier_aux
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifier_auxAccess().getMODIFIERTerminalRuleCall()); }
(	RULE_MODIFIER)?
{ after(grammarAccess.getModifier_auxAccess().getMODIFIERTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstructor_declaration
entryRuleconstructor_declaration 
:
{ before(grammarAccess.getConstructor_declarationRule()); }
	 ruleconstructor_declaration
{ after(grammarAccess.getConstructor_declarationRule()); } 
	 EOF 
;

// Rule constructor_declaration
ruleconstructor_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructor_declarationAccess().getGroup()); }
(rule__Constructor_declaration__Group__0)
{ after(grammarAccess.getConstructor_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulemethod_declaration
entryRulemethod_declaration 
:
{ before(grammarAccess.getMethod_declarationRule()); }
	 rulemethod_declaration
{ after(grammarAccess.getMethod_declarationRule()); } 
	 EOF 
;

// Rule method_declaration
rulemethod_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethod_declarationAccess().getGroup()); }
(rule__Method_declaration__Group__0)
{ after(grammarAccess.getMethod_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement_block
entryRulestatement_block 
:
{ before(grammarAccess.getStatement_blockRule()); }
	 rulestatement_block
{ after(grammarAccess.getStatement_blockRule()); } 
	 EOF 
;

// Rule statement_block
rulestatement_block
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_blockAccess().getGroup()); }
(rule__Statement_block__Group__0)
{ after(grammarAccess.getStatement_blockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleif_statement
entryRuleif_statement 
:
{ before(grammarAccess.getIf_statementRule()); }
	 ruleif_statement
{ after(grammarAccess.getIf_statementRule()); } 
	 EOF 
;

// Rule if_statement
ruleif_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_statementAccess().getGroup()); }
(rule__If_statement__Group__0)
{ after(grammarAccess.getIf_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledo_statement
entryRuledo_statement 
:
{ before(grammarAccess.getDo_statementRule()); }
	 ruledo_statement
{ after(grammarAccess.getDo_statementRule()); } 
	 EOF 
;

// Rule do_statement
ruledo_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDo_statementAccess().getGroup()); }
(rule__Do_statement__Group__0)
{ after(grammarAccess.getDo_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewhile_statement
entryRulewhile_statement 
:
{ before(grammarAccess.getWhile_statementRule()); }
	 rulewhile_statement
{ after(grammarAccess.getWhile_statementRule()); } 
	 EOF 
;

// Rule while_statement
rulewhile_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhile_statementAccess().getGroup()); }
(rule__While_statement__Group__0)
{ after(grammarAccess.getWhile_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefor_statement
entryRulefor_statement 
:
{ before(grammarAccess.getFor_statementRule()); }
	 rulefor_statement
{ after(grammarAccess.getFor_statementRule()); } 
	 EOF 
;

// Rule for_statement
rulefor_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_statementAccess().getGroup()); }
(rule__For_statement__Group__0)
{ after(grammarAccess.getFor_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletry_statement
entryRuletry_statement 
:
{ before(grammarAccess.getTry_statementRule()); }
	 ruletry_statement
{ after(grammarAccess.getTry_statementRule()); } 
	 EOF 
;

// Rule try_statement
ruletry_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTry_statementAccess().getGroup()); }
(rule__Try_statement__Group__0)
{ after(grammarAccess.getTry_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleswitch_statement
entryRuleswitch_statement 
:
{ before(grammarAccess.getSwitch_statementRule()); }
	 ruleswitch_statement
{ after(grammarAccess.getSwitch_statementRule()); } 
	 EOF 
;

// Rule switch_statement
ruleswitch_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitch_statementAccess().getGroup()); }
(rule__Switch_statement__Group__0)
{ after(grammarAccess.getSwitch_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable_declaration
entryRulevariable_declaration 
:
{ before(grammarAccess.getVariable_declarationRule()); }
	 rulevariable_declaration
{ after(grammarAccess.getVariable_declarationRule()); } 
	 EOF 
;

// Rule variable_declaration
rulevariable_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup()); }
(rule__Variable_declaration__Group__0)
{ after(grammarAccess.getVariable_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable_initializer
entryRulevariable_initializer 
:
{ before(grammarAccess.getVariable_initializerRule()); }
	 rulevariable_initializer
{ after(grammarAccess.getVariable_initializerRule()); } 
	 EOF 
;

// Rule variable_initializer
rulevariable_initializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_initializerAccess().getAlternatives()); }
(rule__Variable_initializer__Alternatives)
{ after(grammarAccess.getVariable_initializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulearglist
entryRulearglist 
:
{ before(grammarAccess.getArglistRule()); }
	 rulearglist
{ after(grammarAccess.getArglistRule()); } 
	 EOF 
;

// Rule arglist
rulearglist
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArglistAccess().getGroup()); }
(rule__Arglist__Group__0)
{ after(grammarAccess.getArglistAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression_aux
entryRuleexpression_aux 
:
{ before(grammarAccess.getExpression_auxRule()); }
	 ruleexpression_aux
{ after(grammarAccess.getExpression_auxRule()); } 
	 EOF 
;

// Rule expression_aux
ruleexpression_aux
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_auxAccess().getGroup()); }
(rule__Expression_aux__Group__0)?
{ after(grammarAccess.getExpression_auxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleliteral_expression
entryRuleliteral_expression 
:
{ before(grammarAccess.getLiteral_expressionRule()); }
	 ruleliteral_expression
{ after(grammarAccess.getLiteral_expressionRule()); } 
	 EOF 
;

// Rule literal_expression
ruleliteral_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteral_expressionAccess().getAlternatives()); }
(rule__Literal_expression__Alternatives)
{ after(grammarAccess.getLiteral_expressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Class_interface_name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_interface_nameAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getClass_interface_nameAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClass_interface_nameAccess().getGroup_1()); }
(rule__Class_interface_name__Group_1__0)
{ after(grammarAccess.getClass_interface_nameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_specifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_specifierAccess().getBooleanKeyword_0()); }

	'boolean' 

{ after(grammarAccess.getType_specifierAccess().getBooleanKeyword_0()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getByteKeyword_1()); }

	'byte' 

{ after(grammarAccess.getType_specifierAccess().getByteKeyword_1()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getCharKeyword_2()); }

	'char' 

{ after(grammarAccess.getType_specifierAccess().getCharKeyword_2()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getShortKeyword_3()); }

	'short' 

{ after(grammarAccess.getType_specifierAccess().getShortKeyword_3()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getIntKeyword_4()); }

	'int' 

{ after(grammarAccess.getType_specifierAccess().getIntKeyword_4()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getFloatKeyword_5()); }

	'float' 

{ after(grammarAccess.getType_specifierAccess().getFloatKeyword_5()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getLongKeyword_6()); }

	'long' 

{ after(grammarAccess.getType_specifierAccess().getLongKeyword_6()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getDoubleKeyword_7()); }

	'double' 

{ after(grammarAccess.getType_specifierAccess().getDoubleKeyword_7()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getClass_interface_nameParserRuleCall_8()); }
	ruleclass_interface_name
{ after(grammarAccess.getType_specifierAccess().getClass_interface_nameParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getGroup_0()); }
(rule__Field_declaration__Group_0__0)
{ after(grammarAccess.getField_declarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getStatic_initializerParserRuleCall_1()); }
	rulestatic_initializer
{ after(grammarAccess.getField_declarationAccess().getStatic_initializerParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getField_declarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getMethod_declarationParserRuleCall_0_1_0()); }
	rulemethod_declaration
{ after(grammarAccess.getField_declarationAccess().getMethod_declarationParserRuleCall_0_1_0()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getConstructor_declarationParserRuleCall_0_1_1()); }
	ruleconstructor_declaration
{ after(grammarAccess.getField_declarationAccess().getConstructor_declarationParserRuleCall_0_1_1()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getVariable_declarationParserRuleCall_0_1_2()); }
	rulevariable_declaration
{ after(grammarAccess.getField_declarationAccess().getVariable_declarationParserRuleCall_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getStatement_blockParserRuleCall_4_0()); }
	rulestatement_block
{ after(grammarAccess.getMethod_declarationAccess().getStatement_blockParserRuleCall_4_0()); }
)

    |(
{ before(grammarAccess.getMethod_declarationAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getMethod_declarationAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getVariable_declarationParserRuleCall_2_0()); }
	rulevariable_declaration
{ after(grammarAccess.getFor_statementAccess().getVariable_declarationParserRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getFor_statementAccess().getGroup_2_1()); }
(rule__For_statement__Group_2_1__0)
{ after(grammarAccess.getFor_statementAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getFor_statementAccess().getSemicolonKeyword_2_2()); }

	';' 

{ after(grammarAccess.getFor_statementAccess().getSemicolonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getGroup_5_0()); }
(rule__Switch_statement__Group_5_0__0)
{ after(grammarAccess.getSwitch_statementAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getSwitch_statementAccess().getGroup_5_1()); }
(rule__Switch_statement__Group_5_1__0)
{ after(grammarAccess.getSwitch_statementAccess().getGroup_5_1()); }
)

    |(
{ before(grammarAccess.getSwitch_statementAccess().getStatementParserRuleCall_5_2()); }
	rulestatement
{ after(grammarAccess.getSwitch_statementAccess().getStatementParserRuleCall_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariable_declarationParserRuleCall_0()); }
	rulevariable_declaration
{ after(grammarAccess.getStatementAccess().getVariable_declarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_blockParserRuleCall_2()); }
	rulestatement_block
{ after(grammarAccess.getStatementAccess().getStatement_blockParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIf_statementParserRuleCall_3()); }
	ruleif_statement
{ after(grammarAccess.getStatementAccess().getIf_statementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDo_statementParserRuleCall_4()); }
	ruledo_statement
{ after(grammarAccess.getStatementAccess().getDo_statementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhile_statementParserRuleCall_5()); }
	rulewhile_statement
{ after(grammarAccess.getStatementAccess().getWhile_statementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getFor_statementParserRuleCall_6()); }
	rulefor_statement
{ after(grammarAccess.getStatementAccess().getFor_statementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getTry_statementParserRuleCall_7()); }
	ruletry_statement
{ after(grammarAccess.getStatementAccess().getTry_statementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSwitch_statementParserRuleCall_8()); }
	ruleswitch_statement
{ after(grammarAccess.getStatementAccess().getSwitch_statementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_9()); }
(rule__Statement__Group_9__0)
{ after(grammarAccess.getStatementAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_10()); }
(rule__Statement__Group_10__0)
{ after(grammarAccess.getStatementAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_11()); }
(rule__Statement__Group_11__0)
{ after(grammarAccess.getStatementAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_12()); }
(rule__Statement__Group_12__0)
{ after(grammarAccess.getStatementAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_13()); }
(rule__Statement__Group_13__0)
{ after(grammarAccess.getStatementAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_14()); }
(rule__Statement__Group_14__0)
{ after(grammarAccess.getStatementAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_15()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getExpressionParserRuleCall_0()); }
	ruleexpression
{ after(grammarAccess.getVariable_initializerAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariable_initializerAccess().getGroup_1()); }
(rule__Variable_initializer__Group_1__0)
{ after(grammarAccess.getVariable_initializerAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
(rule__Expression__Group_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2()); }
(rule__Expression__Group_2__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_3()); }
(rule__Expression__Group_3__0)
{ after(grammarAccess.getExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_4()); }
(rule__Expression__Group_4__0)
{ after(grammarAccess.getExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_5()); }
(rule__Expression__Group_5__0)
{ after(grammarAccess.getExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_6()); }
(rule__Expression__Group_6__0)
{ after(grammarAccess.getExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_7()); }
(rule__Expression__Group_7__0)
{ after(grammarAccess.getExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_8()); }
(rule__Expression__Group_8__0)
{ after(grammarAccess.getExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_9()); }
(rule__Expression__Group_9__0)
{ after(grammarAccess.getExpressionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_expressionAccess().getINTEGER_LITERALTerminalRuleCall_0()); }
	RULE_INTEGER_LITERAL
{ after(grammarAccess.getLiteral_expressionAccess().getINTEGER_LITERALTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteral_expressionAccess().getFLOAT_LITERALTerminalRuleCall_1()); }
	RULE_FLOAT_LITERAL
{ after(grammarAccess.getLiteral_expressionAccess().getFLOAT_LITERALTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteral_expressionAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getLiteral_expressionAccess().getSTRINGTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteral_expressionAccess().getCHARACTERTerminalRuleCall_3()); }
	RULE_CHARACTER
{ after(grammarAccess.getLiteral_expressionAccess().getCHARACTERTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Greeting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group__0__Impl
	rule__Greeting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getHelloKeyword_0()); }

	'Hello' 

{ after(grammarAccess.getGreetingAccess().getHelloKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Greeting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group__1__Impl
	rule__Greeting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getNameAssignment_1()); }
(rule__Greeting__NameAssignment_1)
{ after(grammarAccess.getGreetingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Greeting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getExclamationMarkKeyword_2()); }

	'!' 

{ after(grammarAccess.getGreetingAccess().getExclamationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Package_name__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name__Group__0__Impl
	rule__Package_name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_nameAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getPackage_nameAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_name__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_nameAccess().getPackage_name_auxParserRuleCall_1()); }
	rulepackage_name_aux
{ after(grammarAccess.getPackage_nameAccess().getPackage_name_auxParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package_name_aux__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name_aux__Group__0__Impl
	rule__Package_name_aux__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name_aux__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_name_auxAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getPackage_name_auxAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_name_aux__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name_aux__Group__1__Impl
	rule__Package_name_aux__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name_aux__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_name_auxAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getPackage_name_auxAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_name_aux__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name_aux__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name_aux__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_name_auxAccess().getPackage_name_auxParserRuleCall_2()); }
	rulepackage_name_aux
{ after(grammarAccess.getPackage_name_auxAccess().getPackage_name_auxParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Class_interface_name__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_interface_name__Group_1__0__Impl
	rule__Class_interface_name__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_interface_name__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_interface_nameAccess().getPackage_nameParserRuleCall_1_0()); }
	rulepackage_name
{ after(grammarAccess.getClass_interface_nameAccess().getPackage_nameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_interface_name__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_interface_name__Group_1__1__Impl
	rule__Class_interface_name__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_interface_name__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_interface_nameAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getClass_interface_nameAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_interface_name__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_interface_name__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_interface_name__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_interface_nameAccess().getIDENTIFIERTerminalRuleCall_1_2()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getClass_interface_nameAccess().getIDENTIFIERTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getType_specifierParserRuleCall_0()); }
	ruletype_specifier
{ after(grammarAccess.getTypeAccess().getType_specifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1()); }
(rule__Type__Group_1__0)?
{ after(grammarAccess.getTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_1()); }

	']' 

{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeParserRuleCall_0()); }
	ruletype
{ after(grammarAccess.getParameterAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getParameterAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_2()); }
(rule__Parameter__Group_2__0)?
{ after(grammarAccess.getParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1()); }

	']' 

{ after(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group__0__Impl
	rule__Parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParameterParserRuleCall_0()); }
	ruleparameter
{ after(grammarAccess.getParameter_listAccess().getParameterParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getGroup_1()); }
(rule__Parameter_list__Group_1__0)?
{ after(grammarAccess.getParameter_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group_1__0__Impl
	rule__Parameter_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParameterParserRuleCall_1_1()); }
	ruleparameter
{ after(grammarAccess.getParameter_listAccess().getParameterParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Doc_comment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Doc_comment__Group__0__Impl
	rule__Doc_comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Doc_comment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoc_commentAccess().getSolidusAsteriskAsteriskKeyword_0()); }

	'/**' 

{ after(grammarAccess.getDoc_commentAccess().getSolidusAsteriskAsteriskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Doc_comment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Doc_comment__Group__1__Impl
	rule__Doc_comment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Doc_comment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoc_commentAccess().getTextKeyword_1()); }

	'... text ...' 

{ after(grammarAccess.getDoc_commentAccess().getTextKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Doc_comment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Doc_comment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Doc_comment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoc_commentAccess().getAsteriskSolidusKeyword_2()); }

	'*/' 

{ after(grammarAccess.getDoc_commentAccess().getAsteriskSolidusKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Field_declaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_declaration__Group_0__0__Impl
	rule__Field_declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getDoc_commentParserRuleCall_0_0()); }
(	ruledoc_comment)?
{ after(grammarAccess.getField_declarationAccess().getDoc_commentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_declaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getAlternatives_0_1()); }
(rule__Field_declaration__Alternatives_0_1)
{ after(grammarAccess.getField_declarationAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Static_initializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static_initializer__Group__0__Impl
	rule__Static_initializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getStaticKeyword_0()); }

	'static' 

{ after(grammarAccess.getStatic_initializerAccess().getStaticKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Static_initializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static_initializer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getStatement_blockParserRuleCall_1()); }
	rulestatement_block
{ after(grammarAccess.getStatic_initializerAccess().getStatement_blockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constructor_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__0__Impl
	rule__Constructor_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getModifier_auxParserRuleCall_0()); }
	rulemodifier_aux
{ after(grammarAccess.getConstructor_declarationAccess().getModifier_auxParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__1__Impl
	rule__Constructor_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getConstructor_declarationAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__2__Impl
	rule__Constructor_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getConstructor_declarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__3__Impl
	rule__Constructor_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getParameter_listParserRuleCall_3()); }
(	ruleparameter_list)?
{ after(grammarAccess.getConstructor_declarationAccess().getParameter_listParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__4__Impl
	rule__Constructor_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getConstructor_declarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getStatement_blockParserRuleCall_5()); }
	rulestatement_block
{ after(grammarAccess.getConstructor_declarationAccess().getStatement_blockParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__Method_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__0__Impl
	rule__Method_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getMethod_declarationAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__1__Impl
	rule__Method_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getParameter_listParserRuleCall_1()); }
(	ruleparameter_list)?
{ after(grammarAccess.getMethod_declarationAccess().getParameter_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__2__Impl
	rule__Method_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getMethod_declarationAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__3__Impl
	rule__Method_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getGroup_3()); }
(rule__Method_declaration__Group_3__0)?
{ after(grammarAccess.getMethod_declarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getAlternatives_4()); }
(rule__Method_declaration__Alternatives_4)
{ after(grammarAccess.getMethod_declarationAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Method_declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group_3__0__Impl
	rule__Method_declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getMethod_declarationAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getRightSquareBracketKeyword_3_1()); }

	']' 

{ after(grammarAccess.getMethod_declarationAccess().getRightSquareBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__0__Impl
	rule__Statement_block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getStatement_blockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__1__Impl
	rule__Statement_block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getStatementParserRuleCall_1()); }
(	rulestatement)?
{ after(grammarAccess.getStatement_blockAccess().getStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getStatement_blockAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__If_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__0__Impl
	rule__If_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIf_statementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__1__Impl
	rule__If_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIf_statementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__2__Impl
	rule__If_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getExpressionParserRuleCall_2()); }
	ruleexpression
{ after(grammarAccess.getIf_statementAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__3__Impl
	rule__If_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIf_statementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__4__Impl
	rule__If_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStatementParserRuleCall_4()); }
	rulestatement
{ after(grammarAccess.getIf_statementAccess().getStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getGroup_5()); }
(rule__If_statement__Group_5__0)?
{ after(grammarAccess.getIf_statementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__If_statement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_5__0__Impl
	rule__If_statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getIf_statementAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStatementParserRuleCall_5_1()); }
	rulestatement
{ after(grammarAccess.getIf_statementAccess().getStatementParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Do_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_statement__Group__0__Impl
	rule__Do_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_statementAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDo_statementAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_statement__Group__1__Impl
	rule__Do_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_statementAccess().getStatementParserRuleCall_1()); }
	rulestatement
{ after(grammarAccess.getDo_statementAccess().getStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_statement__Group__2__Impl
	rule__Do_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_statementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDo_statementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_statement__Group__3__Impl
	rule__Do_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_statementAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDo_statementAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_statement__Group__4__Impl
	rule__Do_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_statementAccess().getExpressionParserRuleCall_4()); }
	ruleexpression
{ after(grammarAccess.getDo_statementAccess().getExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_statement__Group__5__Impl
	rule__Do_statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_statementAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDo_statementAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_statement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_statementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getDo_statementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__While_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__0__Impl
	rule__While_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__1__Impl
	rule__While_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhile_statementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__2__Impl
	rule__While_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getExpressionParserRuleCall_2()); }
	ruleexpression
{ after(grammarAccess.getWhile_statementAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__3__Impl
	rule__While_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhile_statementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getStatementParserRuleCall_4()); }
	rulestatement
{ after(grammarAccess.getWhile_statementAccess().getStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__For_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__0__Impl
	rule__For_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getFor_statementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__1__Impl
	rule__For_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFor_statementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__2__Impl
	rule__For_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getAlternatives_2()); }
(rule__For_statement__Alternatives_2)
{ after(grammarAccess.getFor_statementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__3__Impl
	rule__For_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getExpressionParserRuleCall_3()); }
(	ruleexpression)?
{ after(grammarAccess.getFor_statementAccess().getExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__4__Impl
	rule__For_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getFor_statementAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__5__Impl
	rule__For_statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getExpressionParserRuleCall_5()); }
(	ruleexpression)?
{ after(grammarAccess.getFor_statementAccess().getExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__6__Impl
	rule__For_statement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getFor_statementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__7__Impl
	rule__For_statement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getFor_statementAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getStatementParserRuleCall_8()); }
	rulestatement
{ after(grammarAccess.getFor_statementAccess().getStatementParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__For_statement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group_2_1__0__Impl
	rule__For_statement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getExpressionParserRuleCall_2_1_0()); }
	ruleexpression
{ after(grammarAccess.getFor_statementAccess().getExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getSemicolonKeyword_2_1_1()); }

	';' 

{ after(grammarAccess.getFor_statementAccess().getSemicolonKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Try_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__0__Impl
	rule__Try_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getTryKeyword_0()); }

	'try' 

{ after(grammarAccess.getTry_statementAccess().getTryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__1__Impl
	rule__Try_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getStatementParserRuleCall_1()); }
	rulestatement
{ after(grammarAccess.getTry_statementAccess().getStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__2__Impl
	rule__Try_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getGroup_2()); }
(rule__Try_statement__Group_2__0)?
{ after(grammarAccess.getTry_statementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getGroup_3()); }
(rule__Try_statement__Group_3__0)?
{ after(grammarAccess.getTry_statementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Try_statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__0__Impl
	rule__Try_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getCatchKeyword_2_0()); }

	'catch' 

{ after(grammarAccess.getTry_statementAccess().getCatchKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__1__Impl
	rule__Try_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getTry_statementAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__2__Impl
	rule__Try_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getParameterParserRuleCall_2_2()); }
	ruleparameter
{ after(grammarAccess.getTry_statementAccess().getParameterParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__3__Impl
	rule__Try_statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getTry_statementAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getStatementParserRuleCall_2_4()); }
	rulestatement
{ after(grammarAccess.getTry_statementAccess().getStatementParserRuleCall_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Try_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_3__0__Impl
	rule__Try_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getFinallyKeyword_3_0()); }

	'finally' 

{ after(grammarAccess.getTry_statementAccess().getFinallyKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getStatementParserRuleCall_3_1()); }
	rulestatement
{ after(grammarAccess.getTry_statementAccess().getStatementParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Switch_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__0__Impl
	rule__Switch_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitch_statementAccess().getSwitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__1__Impl
	rule__Switch_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSwitch_statementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__2__Impl
	rule__Switch_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getExpressionParserRuleCall_2()); }
	ruleexpression
{ after(grammarAccess.getSwitch_statementAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__3__Impl
	rule__Switch_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSwitch_statementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__4__Impl
	rule__Switch_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSwitch_statementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__5__Impl
	rule__Switch_statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getAlternatives_5()); }
(rule__Switch_statement__Alternatives_5)
{ after(grammarAccess.getSwitch_statementAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSwitch_statementAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Switch_statement__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_5_0__0__Impl
	rule__Switch_statement__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getCaseKeyword_5_0_0()); }

	'case' 

{ after(grammarAccess.getSwitch_statementAccess().getCaseKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_5_0__1__Impl
	rule__Switch_statement__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getExpressionParserRuleCall_5_0_1()); }
	ruleexpression
{ after(grammarAccess.getSwitch_statementAccess().getExpressionParserRuleCall_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getColonKeyword_5_0_2()); }

	':' 

{ after(grammarAccess.getSwitch_statementAccess().getColonKeyword_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Switch_statement__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_5_1__0__Impl
	rule__Switch_statement__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getDefaultKeyword_5_1_0()); }

	'default' 

{ after(grammarAccess.getSwitch_statementAccess().getDefaultKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getColonKeyword_5_1_1()); }

	':' 

{ after(grammarAccess.getSwitch_statementAccess().getColonKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_1_0()); }
	ruleexpression
{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__0__Impl
	rule__Statement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSynchronizedKeyword_9_0()); }

	'synchronized' 

{ after(grammarAccess.getStatementAccess().getSynchronizedKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__1__Impl
	rule__Statement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_9_1()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__2__Impl
	rule__Statement__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_9_2()); }
	ruleexpression
{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__3__Impl
	rule__Statement__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_9_3()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementParserRuleCall_9_4()); }
	rulestatement
{ after(grammarAccess.getStatementAccess().getStatementParserRuleCall_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statement__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10__0__Impl
	rule__Statement__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnKeyword_10_0()); }

	'return' 

{ after(grammarAccess.getStatementAccess().getReturnKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10__1__Impl
	rule__Statement__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_10_1()); }
(	ruleexpression)?
{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_10_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__0__Impl
	rule__Statement__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getThrowKeyword_11_0()); }

	'throw' 

{ after(grammarAccess.getStatementAccess().getThrowKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__1__Impl
	rule__Statement__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_11_1()); }
	ruleexpression
{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_11_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__0__Impl
	rule__Statement__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIDENTIFIERTerminalRuleCall_12_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getStatementAccess().getIDENTIFIERTerminalRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__1__Impl
	rule__Statement__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getColonKeyword_12_1()); }

	':' 

{ after(grammarAccess.getStatementAccess().getColonKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementParserRuleCall_12_2()); }
	rulestatement
{ after(grammarAccess.getStatementAccess().getStatementParserRuleCall_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__0__Impl
	rule__Statement__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBreakKeyword_13_0()); }

	'break' 

{ after(grammarAccess.getStatementAccess().getBreakKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__1__Impl
	rule__Statement__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIDENTIFIERTerminalRuleCall_13_1()); }
(	RULE_IDENTIFIER)?
{ after(grammarAccess.getStatementAccess().getIDENTIFIERTerminalRuleCall_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_13_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__0__Impl
	rule__Statement__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getContinueKeyword_14_0()); }

	'continue' 

{ after(grammarAccess.getStatementAccess().getContinueKeyword_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__1__Impl
	rule__Statement__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIDENTIFIERTerminalRuleCall_14_1()); }
(	RULE_IDENTIFIER)?
{ after(grammarAccess.getStatementAccess().getIDENTIFIERTerminalRuleCall_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_14__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_14_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_14_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__0__Impl
	rule__Variable_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_0()); }
(rule__Variable_declaration__Group_0__0)
{ after(grammarAccess.getVariable_declarationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__1__Impl
	rule__Variable_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_1()); }
(rule__Variable_declaration__Group_1__0)?
{ after(grammarAccess.getVariable_declarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getVariable_declarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_declaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_0__0__Impl
	rule__Variable_declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_0_0()); }
(rule__Variable_declaration__Group_0_0__0)?
{ after(grammarAccess.getVariable_declarationAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_0_1()); }
(rule__Variable_declaration__Group_0_1__0)
{ after(grammarAccess.getVariable_declarationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_0_0__0__Impl
	rule__Variable_declaration__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getLeftSquareBracketKeyword_0_0_0()); }

	'[' 

{ after(grammarAccess.getVariable_declarationAccess().getLeftSquareBracketKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getRightSquareBracketKeyword_0_0_1()); }

	']' 

{ after(grammarAccess.getVariable_declarationAccess().getRightSquareBracketKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_0_1__0__Impl
	rule__Variable_declaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getEqualsSignKeyword_0_1_0()); }

	'=' 

{ after(grammarAccess.getVariable_declarationAccess().getEqualsSignKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getVariable_initializerParserRuleCall_0_1_1()); }
	rulevariable_initializer
{ after(grammarAccess.getVariable_declarationAccess().getVariable_initializerParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1__0__Impl
	rule__Variable_declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVariable_declarationAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_1_1()); }
(rule__Variable_declaration__Group_1_1__0)
{ after(grammarAccess.getVariable_declarationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1_1__0__Impl
	rule__Variable_declaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getIDENTIFIERTerminalRuleCall_1_1_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getVariable_declarationAccess().getIDENTIFIERTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1_1__1__Impl
	rule__Variable_declaration__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_1_1_1()); }
(rule__Variable_declaration__Group_1_1_1__0)?
{ after(grammarAccess.getVariable_declarationAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_1_1_2()); }
(rule__Variable_declaration__Group_1_1_2__0)?
{ after(grammarAccess.getVariable_declarationAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_declaration__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1_1_1__0__Impl
	rule__Variable_declaration__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getLeftSquareBracketKeyword_1_1_1_0()); }

	'[' 

{ after(grammarAccess.getVariable_declarationAccess().getLeftSquareBracketKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getRightSquareBracketKeyword_1_1_1_1()); }

	']' 

{ after(grammarAccess.getVariable_declarationAccess().getRightSquareBracketKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1_1_2__0__Impl
	rule__Variable_declaration__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getEqualsSignKeyword_1_1_2_0()); }

	'=' 

{ after(grammarAccess.getVariable_declarationAccess().getEqualsSignKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getVariable_initializerParserRuleCall_1_1_2_1()); }
	rulevariable_initializer
{ after(grammarAccess.getVariable_declarationAccess().getVariable_initializerParserRuleCall_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_initializer__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1__0__Impl
	rule__Variable_initializer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getVariable_initializerAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1__1__Impl
	rule__Variable_initializer__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getGroup_1_1()); }
(rule__Variable_initializer__Group_1_1__0)?
{ after(grammarAccess.getVariable_initializerAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getRightCurlyBracketKeyword_1_2()); }

	'}' 

{ after(grammarAccess.getVariable_initializerAccess().getRightCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_initializer__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_1__0__Impl
	rule__Variable_initializer__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getVariable_initializerParserRuleCall_1_1_0()); }
	rulevariable_initializer
{ after(grammarAccess.getVariable_initializerAccess().getVariable_initializerParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_1__1__Impl
	rule__Variable_initializer__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getGroup_1_1_1()); }
(rule__Variable_initializer__Group_1_1_1__0)?
{ after(grammarAccess.getVariable_initializerAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getCommaKeyword_1_1_2()); }
(
	',' 
)?
{ after(grammarAccess.getVariable_initializerAccess().getCommaKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_initializer__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_1_1__0__Impl
	rule__Variable_initializer__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getVariable_initializerAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getVariable_initializerParserRuleCall_1_1_1_1()); }
	rulevariable_initializer
{ after(grammarAccess.getVariable_initializerAccess().getVariable_initializerParserRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLiteral_expressionParserRuleCall_0_0()); }
	ruleliteral_expression
{ after(grammarAccess.getExpressionAccess().getLiteral_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_0_1()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNullKeyword_1_0()); }

	'null' 

{ after(grammarAccess.getExpressionAccess().getNullKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_1_1()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__0__Impl
	rule__Expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSuperKeyword_2_0()); }

	'super' 

{ after(grammarAccess.getExpressionAccess().getSuperKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_2_1()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__0__Impl
	rule__Expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getThisKeyword_3_0()); }

	'this' 

{ after(grammarAccess.getExpressionAccess().getThisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_3_1()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__0__Impl
	rule__Expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getIDENTIFIERTerminalRuleCall_4_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getExpressionAccess().getIDENTIFIERTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_4_1()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__0__Impl
	rule__Expression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__1__Impl
	rule__Expression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_5_1()); }
	ruleexpression
{ after(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__2__Impl
	rule__Expression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_5_3()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_6__0__Impl
	rule__Expression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftSquareBracketKeyword_6_0()); }

	'[' 

{ after(grammarAccess.getExpressionAccess().getLeftSquareBracketKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_6__1__Impl
	rule__Expression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_6_1()); }
	ruleexpression
{ after(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_6__2__Impl
	rule__Expression__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightSquareBracketKeyword_6_2()); }

	']' 

{ after(grammarAccess.getExpressionAccess().getRightSquareBracketKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_6_3()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__0__Impl
	rule__Expression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getFullStopKeyword_7_0()); }

	'.' 

{ after(grammarAccess.getExpressionAccess().getFullStopKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__1__Impl
	rule__Expression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_7_1()); }
	ruleexpression
{ after(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_7_2()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__0__Impl
	rule__Expression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getExpressionAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__1__Impl
	rule__Expression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_8_1()); }
	ruleexpression
{ after(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_8_2()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9__0__Impl
	rule__Expression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getInstanceofKeyword_9_0()); }

	'instanceof' 

{ after(grammarAccess.getExpressionAccess().getInstanceofKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9__1__Impl
	rule__Expression__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getClass_interface_nameParserRuleCall_9_1()); }
	ruleclass_interface_name
{ after(grammarAccess.getExpressionAccess().getClass_interface_nameParserRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_9_2()); }
	ruleexpression_aux
{ after(grammarAccess.getExpressionAccess().getExpression_auxParserRuleCall_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Arglist__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arglist__Group__0__Impl
	rule__Arglist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getExpressionParserRuleCall_0()); }
	ruleexpression
{ after(grammarAccess.getArglistAccess().getExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arglist__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arglist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getGroup_1()); }
(rule__Arglist__Group_1__0)?
{ after(grammarAccess.getArglistAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arglist__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arglist__Group_1__0__Impl
	rule__Arglist__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getArglistAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arglist__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arglist__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arglist__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArglistAccess().getExpressionParserRuleCall_1_1()); }
	ruleexpression
{ after(grammarAccess.getArglistAccess().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group__0__Impl
	rule__Expression_aux__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getExpression_auxAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group__1__Impl
	rule__Expression_aux__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getArglistParserRuleCall_1()); }
(	rulearglist)?
{ after(grammarAccess.getExpression_auxAccess().getArglistParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group__2__Impl
	rule__Expression_aux__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getExpression_auxAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpression_auxParserRuleCall_3()); }
	ruleexpression_aux
{ after(grammarAccess.getExpression_auxAccess().getExpression_auxParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Model__GreetingsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGreetingsGreetingParserRuleCall_0()); }
	ruleGreeting{ after(grammarAccess.getModelAccess().getGreetingsGreetingParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGreetingAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING : '\'\'' RULE_CHARACTER? '\'\'';

RULE_CHARACTER : 'based on the unicode character set';

RULE_FLOAT_LITERAL : (RULE_DECIMAL_DIGITS '.' RULE_DECIMAL_DIGITS? RULE_EXPONENT_PART? RULE_FLOAT_TYPE_SUFFIX?|'.' RULE_DECIMAL_DIGITS RULE_EXPONENT_PART? RULE_FLOAT_TYPE_SUFFIX?|RULE_DECIMAL_DIGITS RULE_EXPONENT_PART? RULE_DECIMAL_DIGITS?);

RULE_DECIMAL_DIGITS : '0'..'9' ('0'..'9')?;

RULE_EXPONENT_PART : 'e' ('+'|'-')? RULE_DECIMAL_DIGITS;

RULE_FLOAT_TYPE_SUFFIX : ('f'|'d');

RULE_INTEGER_LITERAL : ('1'..'9' ('0'..'9')? 'l'?|('0'..'7')? 'l'?|'0' 'x' ('0'..'9' 'a'..'f')+ 'l'?);

RULE_MODIFIER : ('public'|'private'|'protected'|'static'|'final'|'native'|'synchronized'|'abstract'|'threadsafe'|'transient');

RULE_IDENTIFIER : ('a'..'z'|'_'|'$') ('a'..'z'|'_'|'$'|'0'..'9'|'unicode character over 00C0')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


